{"meta":{"title":"CHBZ","subtitle":"","description":"","author":"CHBZ","url":"http://example.com","root":"/"},"pages":[{"title":"About","date":"2021-10-30T07:23:40.875Z","updated":"2021-10-30T07:23:40.875Z","comments":true,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":""},{"title":"Tags","date":"2021-10-30T07:23:40.890Z","updated":"2021-10-30T07:23:40.890Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""},{"title":"Categories","date":"2021-10-30T07:23:40.875Z","updated":"2021-10-30T07:23:40.875Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"Python","slug":"Python","date":"2021-10-30T08:32:32.000Z","updated":"2021-10-30T08:33:24.531Z","comments":true,"path":"2021/10/30/Python/","link":"","permalink":"http://example.com/2021/10/30/Python/","excerpt":"","text":"陈朝努力学Python NO.1基础入门​ ——我亦无他，为手熟尔 一、环境搭建以及Git使用1、环境搭建2、Git入门二、基础语法1、说一说变量（1）变量是什么学C语言时，变量就可以改变的量，而变量名，就可以理解成一段内存空间的名称，类似于门牌号一样。变量名可以区分一个变量和另一个变量。 python是一种面向对象语言，在python中变量是对象的引用。例如python语句：height=1，在执行时的过程为： 创建一个整型类型、且值为1的对象 创建一个变量名为“height” 把变量名关联到“1”这个对象上 所以python变量只是一个标签，用于引用对象，实际数据是存放在对象中，而不是变量中。所以“=”在python中代表的不单单是赋值，而是引用赋值。 （2）变量的使用 变量的定义 创建对象时的属性有：标识（id）、类型（type）、值（value） id：唯一识别，不可改变，可以认为它就是对象的地址 type：不可改变。如a是整型，name是字符串型变量 value：有的可改变，有的不可改变。 1234567891011121314151617a = 4399 #创建一个值为4399的整型对象，并关联到ab = 4399 #创建一个值为4399的整型对象，并关联到bid(a) #查看a的标识1740471609648id(b) #查看b的标识1740471609520a is b #查看a和b有没有关联到同一个对象Falsea == b #查看a和b的值是否相同True 变量的输出 直接输出 12print(123)print(&quot;ChenZhao&quot;) 变量输出 12345678910a = 4399b = &quot;ChenZhao&quot;print(a)print(&quot;4000加上399的值为&quot;,a)#4000加上399的值为4399print(b)print(&quot;我的姓名为&quot;,b)#我的姓名为ChenZhao （3）变量命名规则 合法 构成：字母、下划线开头，可包含数字 非关键字：避讳函数名等关键字 非空格：不能包含空格 简单易懂、见名知意 2、数据类型（1）数值型 整数 浮点数 123456a = 4399print(type(a))#&lt;class &#x27;int&#x27;&gt;b = 3.1415926print(type(b))#&lt;class &#x27;float&#x27;&gt; （2）字符型引号内的内容就是字符串型变量，引号必须成双成对出现 12345678910a = &quot;My name is&quot;b = &quot;ChenZhao&quot;c = a + bprint(c) #My name is ChenZhaoch1 = &quot;4&quot;ch2 = &quot;5&quot;print(ch1+ch2)#结果为45print(ch2+ch1)#结果为54 （3）布尔型 运算结果只有“真”和“假” 1234print(1000&gt;1)#Trueprint(1==3)#False 3、字符串（1）转义字符12345678910s = &#x27;I&#x27;m a student s1 = &quot;I&#x27;m a student&quot;s2 = &#x27;I\\&#x27;m a student&#x27;print(s)#SyntaxError: invalid syntax.语法错误：非法语法print(s1)#I&#x27;m a studentprint(s2)#I&#x27;m a student 123456789101112131415s = &quot;My name isChenZhao&quot;s1 = &quot;My name is\\ChenZhao&quot;s2 = &quot;My name is\\n ChenZhao&quot;print(s)#SyntaxError: unterminated string literal.语法错误：未终止的字符串文字print(s1)#My name is ChenZhaoprint(s2)&#x27;&#x27;&#x27;My name is ChenZhao&#x27;&#x27;&#x27; （2）基本运算 计算长度：len(string) 123s = &quot;My name is ChenZhao&quot;print(len(s))#19 切片：string(开始:结束:步长) ps:[开始：结束)是左闭右开区间 ​ python中对字符串中元素的排序如下： P y t h o n 0 1 2 3 4 5 -6 -5 -4 -3 -2 -1 12345678910111213a = &quot;My name is ChenZhao&quot;print(a[0]) #输出字符串第一个元素 Mprint(a[0:0]) #输出字符串为空print(a[0:7]) #输出字符串前7个元素 My nameprint(a[:7]) #输出字符串前7个元素 My nameprint(a[11:]) #从第12个元素开始切 ChenZhaoprint(a[::1]) #步长为1输出字符串 My name is ChenZhaoprint(a[::2]) #步长为2输出字符串 M aei hnhoprint(a[::-1]) #倒叙输出字符串 oahZnehC si eman yM print(a[::-2]) #倒叙步长为2输出字符串 ohnh iea M 4、运算符（1）算数运算符​ ”+“、”-“、”*“、”/“、”%“、”//“、”**“ 1234567print(3+2) #5 加print(3-2) #1 减print(3*2) #6 乘print(3/2) #1.5 除print(3%2) #1 取余print(3//2) #1 取整print(3**2) #9 取幂 （2）赋值运算符​ ”=“、”+=“、”-+“、”*=“、”/=“ 12345a = b a = ba += b a = a + ba -= b a = a - ba *= b a = a * ba /= b a = a / b （3）关系运算符​ ”&gt;“、”&lt;“、”==“、”&gt;=“、”&lt;=“、”!=“ ​ 关系运算符返回值为布尔类型 （4）逻辑运算符​ ”&amp;“、”|“、”！“ ​ 与、或、非 （5）类型转换 数值转字符 1234567a = &quot;圆周率是&quot;b = 3.14print(a+b) #发生错误，字符串型变量和数值型变量不能连接起来print(a+str(b)) #圆周率是3.14print(a+repr(b)) #圆周率是3.14print(repr(a+repr(b)) #&#x27;圆周率是3.14&#x27; 字符转数值 1234a1 = &quot;5&quot;a2 = int(a1)print(type(a1)) #&lt;class &#x27;str&#x27;&gt;print(type(a2)) #&lt;class &#x27;int&#x27;&gt; 5、输入与输出 print() 输出、格式控制 12345x = 3s = &quot;土豆&quot;print(&quot;我买了&quot;,x,&quot;斤&quot;,s) #我买了 3 斤 土豆print(&quot;我买了%s斤%s&quot; %(x,s)) #我买了3斤土豆print(&quot;我买了&#123;&#125;斤&#123;&#125;&quot;.format(x,s)) #我买了3斤土豆 input 输入、格式控制 ps:input函数输入的都是字符串类型的变量。 123456s = input(&quot;输入姓名：&quot;) #输入姓名：print(&quot;输入的姓名是：&quot;，s) #输入的姓名是： czx = input(&quot;请输入一个数：&quot;) #输入50print(x*2) #5050print(&quot;x加2的值为：&quot;,int(x)+2) #52 三、数据结构1、列表（1）定义12345a = [1,3,5,7,9]b = []print(a) #[1,3,5,7,9]print(b) #[] （2）访问 正负索引访问 12345a = [1,3,5,7,9]print(a[0]) #1print(a[-2]) #7a[1] = 99 #对列表中某个元素进行修改print(a) #[1, 99, 5, 7, 9] 切片访问 列表和字符串一样都可以进行切片：a[开始:结束:步长]，[开始：结束)左闭右开区间 （3）添加​ 使用append（）函数添加列表元素 1234x = [1,3,5,7,9]print(x) #[1, 3, 5, 7, 9]x.append(2,4,6,8,10)print(x) #[1, 3, 5, 7, 9, 20] （4）删除​ 使用del（）函数删除列表元素 1234a = [1,3,5,7,9]print(a) #[1, 3, 5, 7, 9]del a[-1]print(a) #[1, 3, 5, 7] 2、元组（1）创建12345678a = (1,3,5,7,9)print(a)print(type(a))b = (66)c = (66,)print(&quot;b的类型是：&#123;&#125;/t值为：&#123;&#125;&quot;.format(type(b),b)) #b的类型是：&lt;class &#x27;int&#x27;&gt;,值为：66print(&quot;c的类型是：&#123;&#125;/t值为：&#123;&#125;&quot;.format(type(c),c)) #c的类型是：&lt;class &#x27;tuple&#x27;&gt;,值为：(66,) （2）访问 访问方式与列表一致 索引访问 切片访问 注意不能修改元组中的值 （3）操作 删除元组方法 123a = (1,3,5,7,9)del aprint(a) #报错，因为此时不存在a元组 连接的实现 1234a = (1,2,3)b = (4,5,6)c = a + bprint(c) #(1, 2, 3, 4, 5, 6) 计算长度函数 12a = (1,3,5,7,9)print(len(a)) #5 迭代 123a = (2,5,8)b = a * 2print(b) #(2, 5, 8, 2, 5, 8) 3、字典（1）定义​ 字典：&#123;key1:value1,key2:value2,......&#125; 1234a = &#123;&quot;张三&quot;:18, &quot;李四&quot;:20, &#125;print(a) #&#123;&#x27;张三&#x27;: 18, &#x27;李四&#x27;: 20&#125; （2）引用及修改​ 字典是无序的，只能通过key值来引用和修改对应的value 12345678a = &#123; &quot;张三&quot;:18, &quot;李四&quot;:20, &#125;print(a) #&#123;&#x27;张三&#x27;: 18, &#x27;李四&#x27;: 20&#125;print(a[&quot;张三&quot;]) #18a[&quot;李四&quot;] = 35 print(a) #&#123;&#x27;张三&#x27;: 18, &#x27;李四&#x27;: 35&#125; （3）增加只能添加字典中没有的元素 123456a = &#123; &quot;张三&quot;:18, &quot;李四&quot;:20, &#125;a[&quot;王五&quot;] = 40print(a) #&#123;&#x27;张三&#x27;: 18, &#x27;李四&#x27;: 20, &#x27;王五&#x27;: 40&#125; （4）删除1234567a = &#123; &quot;张三&quot;:18, &quot;李四&quot;:20, &quot;王五&quot;:40, &#125;del a[&quot;王五&quot;]print(a) #&#123;&#x27;张三&#x27;: 18, &#x27;李四&#x27;: 20&#125; 4、集合（1）定义和数学中集合的概念一样，集合元素具有唯一性、确定性、无序性 12345678910#直接使用&#123;&#125;定义一个集合a = &#123;&quot;ChenZhao&quot;,&quot;4399&quot;,&quot;这是一只猫！&quot;&#125;#使用set()函数将列表、元组对象强制转换成集合对象b = set([1,2,3,4,1])c = set((1,3,5))print(type(b)) #&lt;class &#x27;set&#x27;&gt;print(type(c)) #&lt;class &#x27;set&#x27;&gt;print（b） #&#123;1, 2, 3, 4&#125; （2）添加​ setname.add(element) 123x = &#123;1,3,5&#125;x.add(4399)print(x) #&#123;1, 3, 5, 4399&#125; （3）删除del：删除整个集合 del setname pop()方法：官方文档是说随机删除一个元素setname.pop() //实际上对于字符串是随机删除，对于数字是删最小的 remove()方法：删除指定一个元素 setname.remove(element) clear()方法：删除全部元素，但集合还在，只是为空集合而已setname.clear() 123456789x = &#123;1,3,5,&quot;ChenZhao&quot;,&quot;4399&quot;,10086&#125;x.pop()print(x) #&#123;&#x27;ChenZhao&#x27;, 3, 5, 10086, &#x27;4399&#x27;&#125;x.remove(5)print(x) #&#123;3, 10086, &#x27;ChenZhao&#x27;, &#x27;4399&#x27;&#125;x.clear()print(x) #set()del xprint(x) #报错name &#x27;x&#x27; is not defined （4）运算​ 交集：&amp; setname1 &amp; setname2 setname1与setname2中都有的元素 ​ 并集：| setname1 | setname2 setname1与setname2中所有的元素 ​ 差集：- setname1 - setname2 setname1中有setname2中没有的元素 12345x = &#123;2,3,4,5&#125;y = &#123;1,2,3&#125;print(x &amp; y) #&#123;2, 3&#125;print(x | y) #&#123;1, 2, 3, 4, 5&#125;print(x - y) #&#123;4, 5&#125; 5、小总结 数据结构 可变性 可重复性 有序性 定义符号 列表（list） 可变 可重复 有序 [ ] 元组（tuple） 不可变 可重复 有序 ( ) 字典（dictionary） 可变 可重复 无序 {key:value,…} 集合（set） 可变 不可重复 无序 { } 四、分支结构1、单分支123if 条件表达式: 语句1#满足条件表达式，就执行语句1；若不满足，什么也不做。注意python语句1要强缩进 12345x = 11y = 22if x &lt; y: x, y = y, xprint(x,y) #22 11 2、双分支12345if 条件表达式: 语句1else 语句2#满足条件表达式，执行语句1；不满足，则执行语句2 3、多分支1234567if 条件表达式1: 语句1elif 条件表达式2: 语句2else: 语句3#逐个对条件表达式进行判断，成立则执行对应事件；否则执行语句3 12345678910grade = 80if grade &lt; 60: print(&quot;成绩不合格&quot;)elif grade &lt; 90: #等价于[60,90) if grade &lt; 80: #等价于[60,80) print(&quot;成绩及格&quot;) else: #等价于[80,90) print(&quot;成绩良好&quot;)else： #等价于[90,,,) print(&quot;成绩优秀&quot;) 4、内联if / if表达式12值1 if 条件 else 值2#先对条件进行判断，条件成立返回值1，否则返回值2 12345a = 54b = 99max = a if a&gt;b else bprint(max) #99print(a if a&lt;b else b) #54 5、条件语句​ 比较运算符：&gt;、&lt;、&gt;=、&lt;= ​ 逻辑运算符：and or not （与、或、非） 1234567#and运算符的运用username = input(&quot;请输入用户名：&quot;)password = input(&quot;请输入密码：&quot;)if username == &quot;chenzhao&quot; and password == &quot;12345&quot;: print(&quot;登录成功！&quot;)else: print(&quot;用户名或密码错误！&quot;) 123456#or运算符的运用age = 45if age &gt;60 or age &lt;18: print(&quot;您可以免费领取公园门票&quot;)else: print(&quot;请购买门票&quot;) 123456#not运算符的运用age = 17if not age &gt; 18: print(&quot;未成年人禁止购买烟酒！&quot;)else print(&quot;您已成年，可以购买烟酒&quot;) 五、循环结构1、for-in循环（1）语法构造123for 变量 in 集合: 具体操作#针对可迭代对象例如集合、列表、字符串等；其循环的次数，取决于集合的大小 （2）遍历列表和元组12345678910111213a = [&quot;I&quot;,&quot;am&quot;,&quot;chen&quot;,&quot;zhao&quot;,555,4399]for x in a: #遍历列表中的所有元素 print(x)for index, name in enumerate(a): #遍历列表元素下标及元素 print(index,name) #元组相当于特殊的列表，所以遍历方式大相径庭a = (&quot;I&quot;,&quot;am&quot;,&quot;chen&quot;,&quot;zhao&quot;,555,4399)for x in a: #遍历元组中的所有元素 print(x)for index, name in enumerate(a): #遍历列表元素下标及元素 print(index,name) （3）遍历字典 items():返回字典内key-value对 keys():返回字典内所有key列表 values():返回字典中所有value列表 12345678910x = &#123;&quot;张三&quot;:18, &quot;李四&quot;:20, &quot;王五&quot;:34 &#125;for a,b in x.items(): print(a,b)for c in x.keys(): print(c)for d in x.values(): print(d) （4）遍历字符串123str1 = &quot;I am a student&quot;for x in str1: print(x,end = &quot;&quot;) 2、用range()函数控制for-in次数（1）语法结构12range (初始值，终止值，步长)#可生成一个可迭代对象，其本质是生成数字列表，可指定初始值、终值、步长 12345678910a = range(1,10,3) #生成可迭代对象aprint(a) #range(1, 10, 3)b = list(a) #把可迭代对象转为一个列表print(b) #[1, 4, 7]c = range(1,5) print(list(c)) #[1, 2, 3, 4]d = range(5)print(list(d)) #[0, 1, 2, 3, 4] 12for x in range(1,5): print(x,&quot;循环输出&quot;) （2）循环12345678#使用循环计算1-100的和sum = 0for i in range(1,101): sum = sum + iprint(sum)#使用sum()函数计算1-100的和print(sum(range(1,101))) 12345678#用控制步长的方式求1-100所有的奇数for i in range(1,101,2): print(i) #通过选择结构实现求1-100的所有奇数for i in range(1,101): if i % 2 == 1: print(i) 3、while循环​ for循环常用于遍历，while循环常用于条件的判断 （1）语法结构123while 条件表达式: 循环体#条件为真时运行循环体；条件为假时跳出循环体,不然为死循环 （3）案例1234i = 0while i &lt; 5: print(i) i += 1 1234name = &quot;&quot;while not name: name = input(&quot;请输入姓名（不能为空）：&quot;)print(&quot;你好啊！&quot;,name) （4）while遍历123456#############################a = [7,9,8,55]i = 0 while i &lt; len(a): print(a[i]) i += 1 123456789101112131415161718192021222324252627#使用while循环逐个从特定集合中找出奇数和偶数x = [34,37,47,44,55,88]even = []odd = []i = 0while i&lt;len(x): if x[i]%2==0: even.append(x[i]) else: odd.append(x[i]) i+=1print(even) #[34, 44, 88]print(odd) #[37, 47, 55]#使用while循环随机从特定集合中找出奇数和偶数x = [34,37,47,44,55,88]even = []odd = []i = 0while len(x)&gt;0: n=x.pop() if (n%2==0): even.append(n) else: odd.append(n)print(even) #[88, 44, 34]print(odd) #[55, 47, 37] 5、跳出循环break12345678循环（while或for in） if 条件表达式 语句1 语句2 break 语句3 ...#完全结束一个循环体，跳出循环 6、跳出循环continue12345678循环（while或for in） if 条件表达式 语句1 语句2 continue 语句3 ...#跳过当前循环，进入下一次循环，级本次循环的后续不再进行，从下一轮开始 六、函数1、函数分类 内置函数：python自带的 自定义函数：程序员字句定义的 模块函数：单独放在模块中的函数，可以是第三方开发的，也可以是python自带的 2、内置函数 abs() delattr() hash() memoryview() set() all() dict() help() min() setattr() any() dir() hex() next() slice() ascii() divmod() id() object() sorted() bin() enumerate() input() oct() staticmethod() bool() eval() int() open() str() breakpoint() exec() isinstance() ord() sum() bytearry() filter() issubclass() pow() super() bytes() float() iter() print() tuple() callable() format() len() property() type() chr() frozenset() list() range() vars() classmethod() getattr() locals() repe() zip() compile() globals() map() reversed() import_() complex() hasattr() max() round() 共69个 123456##构造可迭代对象的函数：list()、tuple()、set()、dict()a = list(range(1,11)) #列表b = tuple(range(1,11)) #元组c = set(range(1,11)) #集合d = dict(陈朝=18,张卓=18) #元组print(&quot;&#123;&#125;\\n&#123;&#125;\\n&#123;&#125;\\n&#123;&#125;&quot;.format(a,b,c,d)) 12345678##有关数学运算方面的函数：min()、max()、sum()、pow()、abs()x = [1,3,5,7,9,2,4,6,8,10,-50]a = min(x) #求最小b = max(x) #求最大c = sum(x) #求和d = pow(x[5],x[9]) #求幂e = abs(x[10]) #求模、求绝对值print(&quot;&#123;&#125;\\n&#123;&#125;\\n&#123;&#125;\\n&#123;&#125;\\n&#123;&#125;&quot;.format(a,b,c,d,e)) 12345678910111213##排序组合函数：sorted()、zip()#sorted()函数保留原对象不变对所有可迭代的对象进行排序操作x = [132,23,232,543,75,790]print(x) #[132, 23, 232, 543, 75, 790]print(sorted(x)) #[23, 75, 132, 232, 543, 790]print(x) #[132, 23, 232, 543, 75, 790]#zip()函数用于将可迭代的对象作为参数，将对象中对应的元素打包成元组，并返回这些由元组组成的列表x = [2,5,8]y = [1,7,9]xy = zip(x,y)print(list(xy)) #[(2, 1), (5, 7), (8, 9)] 123456789101112131415161718192021#all()函数用于判断给定的可迭代参数中的所有元素，仅当全为Ture返回True,一个False返回False#元素除是0、空、None、False外全是Truea = [1.3.5.7.9]b = (0,2,4,6,8)c = [&quot;Chen&quot;,&quot;Zhao&quot;,4399,&quot;&quot;]print(all(a)) #Trueprint(all(b)) #Falseprint(all(c)) #Ture#any()函数用于判断给定的可迭代参数中的所有元素，全为False返回False,一个Ture返回Ture#元素除是0、空、None、False外全是Trued = [0,0,0,1]e = [&quot;&quot;,False,0,None]print(any(d)) #Tureprint(any(e)) #False#例外：当空元组或空列表，使用all()函数，返回值为真f = []g = ()print(all(f),any(f)) #Ture Falseprint(all(g),any(g)) #Ture False 3、自定义函数（1）自定义函数语法结构1234def 函数名([参数列表...]): [函数注释] 函数体 [return 返回值] （2）嵌套函数1234567891011121314151617def computer (type,n): def double (n): return 2*n def half (n): return n/2 def sqr (n): return n*n if type == &quot;double&quot;: return double(n) elif type == &quot;half&quot;: return half(n) else: return sqr(n) print(computer(&quot;half&quot;,10)) #5.0print(computer(&quot;double&quot;,10)) #20print(computer(&quot;sqr&quot;,10)) #100 （3）匿名函数匿名函数就是指没有名称的函数，匿名函数主要用于不想费神去给众多只有一句表达式的简单函数设计名字的情况，语法结构如下： 1lambda [参数列表]: 表达式 1234567891011121314def computer (type): if type == &quot;double&quot;: return lambda n:n*2 elif type == &quot;half&quot;: return lambda n:n/2 else: return lambda n:n*n fun = computer(&quot;half&quot;)print(fun(10))fun = computer(&quot;double&quot;)print(fun(10))fun = computer(&quot;test&quot;)print(fun(10)) 4、作用域12345678910111213141516171819#在模块中定义的是全局变量#在函数中定义的是局部变量#在嵌套函数外层闭包空间定义的是非局部变量x = 10 #这是全局变量def outer (): x = 20 #对outer来说局部变量；对inner来说是非局部变量 def inner(): x = 30 #对inner来说是局部变量 print(&quot;调用inter函数打印:x = &#123;0:d&#125;&quot;.format(x)) inner() #结果为x = 30 print(&quot;调用outer函数打印:x = &#123;0:d&#125;&quot;.format(x)) outer() #结果为x = 20print(&quot;模块中打印:x = &#123;0:d&#125;&quot;.format(x)) #结果为x = 10#inner()函数可以访问x = 10 和x = 20以及x = 30,但是无法改变其值#outer()函数可以访问x = 10 和x = 20,无法访问x = 30,且无法修改其值 1234567891011#自定义函数内实现改变全局变量的值:使用global关键字修饰str = &quot;I love you&quot;print(&quot;Befor change:&quot;+str)def changestr(): global str str = &quot;I no longer love you&quot; print(&quot;After changestr:&quot;+str) changestr()print(&quot;After method:&quot;+str) 七、模块与包1、标准模块（1）基本了解的来源：标准模块、自定义模块、第三方模块 作用：满足特定的目的和需求例如：网络管理、加密处理、数学计算、数据分析、图像处理 构造：标准的或第三方的，直接使用import调用；自定义的放在一个.py文件中；多个函数构成一个模块，多个模块构成一个包，放在一个文件夹内 使用：使用import关键字引用；使用from、import语句 （2）语法规则12import 模块名 #导入模块名.函数名() #使用 （3）六大类标准模块分类基本了解 os：提供了许多与操作系统交互的函数 12import osprint(os.getcwd()) #getcwd：get Current Working Directory 获取当前工作路径 sys：系统相关的参数和函数 1234import sysprint(sys.argv)print(sys.platform)print(sys.path) time：时间相关的函数 123456789import timestart = time.time()for i in range(500000): i += 1time.sleep(2)end = time.time()print(end - start)print(time.localtime()) math：提供对浮点数学的底层c库函数的访问 12import mathprint(&quot;cosΠ/2:&#123;&#125;\\nsin(Π/2):&#123;&#125;&quot;.format(math.cos(math.pi/2),math.sin(math.pi/2))) random：提供了随机选择的工具 与整数相关的：randrange(start,stop,step)、randint(a,b) 与序列相关的：choice(seq)、shuffle(x)、sample(population,k) 实数值相关：random()、uniform(a,b) 123456789101112131415161718import random#与整数相关print(random.randrange(1,100,1))#产生[1,100)内步长为1的任意一个随机数print(random.randint(1,20)) #产生一个[1,20]只内的随机整数#与序列相关x = [&quot;I&quot;,30,&quot;Chen&quot;,&quot;Zhao&quot;]y = list(range(1,10))print(random.choice(x)) #随机从序列中抽取一个元素打印print(&quot;y打乱前：&quot;,y)random.shuffle(y) #shuffle()改变了原有的序列，返回值为空print(&quot;y打乱后：&quot;,y)print(random.samply(x,1)) #从序列中不重复取样，每次取一个，返回值是列表，注意越界#与实数值相关print(random.random()) #随机产生[0,1)之间的实数随机数，区间是左闭右开print(random.uniform(1,3)) #产生[1,3)之间的实数随机数 re：为高级字符串处理提供了正则表达式工具 常用来检索、替换那些符合某个模式（规则）的文本 验证数据的有效性 爬虫 常用函数： 函数 描述 search(pattern,string) 在字符串中寻找模式 match(pattern,string) 在字符串开始处匹配模式 split(pattern,string) 根据模式分割字符串 findall(pattern,string) 列表形式返回匹配项 compile(oattern) 创建模式对象 控制模式对象实例： 实例 描述 [aeiou] 匹配括号中的任意一个字母 [0-9] 匹配任何数字 [a-z] 匹配任何小写字母 [A-Z] 匹配任何大写字母 [A-Za-z0-9] 匹配任何大小写字母和数字 [^aeiou] 匹配除aeiou字母以外的所有字符 [^0-9] 匹配除数字外的字符 [Pp]ython 匹配Python或者python 123456789import rex = &quot;君不见黄河；之水天上来；螺狮粉才是yyds；4399小游戏是我的童年！&quot;print(re.search(&quot;！&quot;,x)) #查询&quot;!&quot;print(re.match(&quot;君不见黄河&quot;,x)) #开始处匹配&quot;君不见黄河&quot;print(re.split(&quot;；&quot;,x)) #以&quot;；&quot;为标志分割xprint(re.findall(&quot;是&quot;,x)) #查询全部&quot;是&quot;r = re.compile(&quot;[a-z]&quot;) #设置模式对象print(r.findall(x)) #找查模式对象 2、第三方模块​ pip指令 pypi官网 指令 描述 pip –version 返回当前版本信息 pip list 查看已经安装好的包 pip install 包名[==版本号] 安装指定版本的包 pip install 文件名路径（.whl的文件） 离线安装包或模块 pip install –upgrade 包名 升级包/模块 pip unstall 包名 卸载包/模块 pip help 查询pip指令的功能 3、自定义模块（1）自定义模块的使用 （2）_name__的使用1234567def lesson(): if _name_==_main_: print(&quot;自己调用自己&quot;) else: print(&quot;被别人调用&quot;)lesson() #结果为：自己调用自己####此文件名为：li851.py 12import li851li851.lesson() #结果为：被别人调用 （3）from/import的使用​ import 包名 是全部导入 ​ from 模块名 import 函数名 仅仅导入某个函数 123456def lesson1(): print(&quot;lesson1&quot;) def lessin2(): print(&quot;lesson2&quot;) ###此文件名为：li851.py 1234from li851 import lesson1from li851 import lesson2lesson1()lesson2() 八、高级语法1、切片（1）语法1对象名称[开始索引:结束索引:步长] 三个参数均可省略 [开始：结束)，左开右闭区间 步长省略默认为1；开始省略默认为0；结束省略默认最大值 （2）切片访问12345678910111213x = [0,1,2,3,4,5,6,7,8,9]#切取单个元素print(x[3])#切取整个对象print(x[:])print(x[::])#逆序排列print(x[::-1])#多层切片print(x[0:6][-5:-3][-1])#指定位置print(x[::2]) （3）切片插入1234567891011121314151617x = [11,22,33]#在尾部插入一个或多个元素x[3:] = [44]print(x)x[4:] = [55,66,77]print(x)#在首部插入一个或多个元素x[:0] = [0]print(x)x[:0] = [-11,-22]print(x)#在中间插入元素x[1:1] = [999,888]print(x) #[11, 999, 888, 22, 33] （4）切片修改1234567891011121314x = [0,1,2,3,4,5]x[4:] = [-4,-5] #替换的与被替换的长度相等print(x)x[5:] = [0,-6,-7] #替换的长度大于被替换的长度print(x)x[1:4] = [-100,-99] #替换的长度小于被替换的长度print(x)#尤其注意不相邻位置上的替换#例如将y中偶数位置上的值全替换为0y = [0,1,2,3,4,5]y[::2] = [0,0,0,0] #此时会报错,因为替换的长度与被替换的长度不相等y[::2] = [0,0,0] #不会报错，且正确修改print(y) （5）切片删除1234567891011x = [1,2,3,4,5,6,7,8,9,10]#赋空值的方式实现删除（只能实现删除单个值或连续的值）x[7:]=[]print(x) #[1, 2, 3, 4, 5, 6, 7]#使用del的方式删除（可以实现不相邻位置上的删除,和连续的多个值或单个值）del x[:2]print(x) #[3, 4, 5, 6, 7]del x[::2]print(x) #[4, 6] 2、Map Reduce核心思想：分而治之，由繁化简，由简入繁 1234567#map()函数def lifang(x): return x**3a = [9,8,7,6,5,4,3,2,1]y = map(lifang,a) #将a中的每一个元素都经过lifang函数运算print(list(y)) 12345678910#reduce()函数from functools import reducedef fun(x,y): #求最大值 z = x if x&gt;y else y return zx = [12,45,57,213,877,23,79]y = reduce(fun,x) #将第一次fun的结果与x比较得到第二次结果，第二次结果再与比较......print(y) 3、迭代器、生成器4、堆5、栈6、高级模式（闭包）7、高级模式（装饰器）九、面向对象1、类的定义与使用2、继承3、封装4、多态5、访问控制台十、文件操作1、文件基础2、读取文件3、储存文件十一、数据库基础1、数据库基本操作2、数据库案例3、ORM基本概念4、ORM案例5、ORM案例实现十二、错误调试1、调试2、异常处理方式3、单元测试参考资料","categories":[],"tags":[]}],"categories":[],"tags":[]}