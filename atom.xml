<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CHBZ</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-10-30T08:33:24.531Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>CHBZ</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python</title>
    <link href="http://example.com/2021/10/30/Python/"/>
    <id>http://example.com/2021/10/30/Python/</id>
    <published>2021-10-30T08:32:32.000Z</published>
    <updated>2021-10-30T08:33:24.531Z</updated>
    
    <content type="html"><![CDATA[<h1 id="陈朝努力学Python-NO-1基础入门"><a href="#陈朝努力学Python-NO-1基础入门" class="headerlink" title="陈朝努力学Python  NO.1基础入门"></a>陈朝努力学Python  NO.1基础入门</h1><p>​                                                                                            <em>——我亦无他，为手熟尔</em></p><h2 id="一、环境搭建以及Git使用"><a href="#一、环境搭建以及Git使用" class="headerlink" title="一、环境搭建以及Git使用"></a>一、环境搭建以及Git使用</h2><h3 id="1、环境搭建"><a href="#1、环境搭建" class="headerlink" title="1、环境搭建"></a>1、环境搭建</h3><h3 id="2、Git入门"><a href="#2、Git入门" class="headerlink" title="2、Git入门"></a>2、Git入门</h3><h2 id="二、基础语法"><a href="#二、基础语法" class="headerlink" title="二、基础语法"></a>二、基础语法</h2><h3 id="1、说一说变量"><a href="#1、说一说变量" class="headerlink" title="1、说一说变量"></a>1、说一说变量</h3><h4 id="（1）变量是什么"><a href="#（1）变量是什么" class="headerlink" title="（1）变量是什么"></a>（1）变量是什么</h4><p>学C语言时，变量就可以改变的量，而变量名，就可以理解成一段内存空间的名称，类似于门牌号一样。变量名可以区分一个变量和另一个变量。</p><p>python是一种面向对象语言，在python中变量是对象的引用。例如python语句：<code>height=1</code>，在执行时的过程为：</p><ol><li>创建一个整型类型、且值为1的对象</li><li>创建一个变量名为“height”</li><li>把变量名关联到“1”这个对象上</li></ol><p>所以python变量只是一个标签，用于引用对象，实际数据是存放在对象中，而不是变量中。所以“=”在python中代表的不单单是赋值，而是引用赋值。</p><h4 id="（2）变量的使用"><a href="#（2）变量的使用" class="headerlink" title="（2）变量的使用"></a>（2）变量的使用</h4><ul><li><p>变量的定义</p><p>创建对象时的属性有：标识（id）、类型（type）、值（value）</p><p>id：唯一识别，不可改变，可以认为它就是对象的地址</p><p>type：不可改变。如a是整型，name是字符串型变量</p><p>value：有的可改变，有的不可改变。</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">4399</span> <span class="comment">#创建一个值为4399的整型对象，并关联到a</span></span><br><span class="line">b = <span class="number">4399</span> <span class="comment">#创建一个值为4399的整型对象，并关联到b</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">id</span>(a) <span class="comment">#查看a的标识</span></span><br><span class="line"><span class="number">1740471609648</span></span><br><span class="line"><span class="built_in">id</span>(b) <span class="comment">#查看b的标识</span></span><br><span class="line"><span class="number">1740471609520</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a <span class="keyword">is</span> b <span class="comment">#查看a和b有没有关联到同一个对象</span></span><br><span class="line"><span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a == b <span class="comment">#查看a和b的值是否相同</span></span><br><span class="line"><span class="literal">True</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>变量的输出</p><p>直接输出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="number">123</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;ChenZhao&quot;</span>)</span><br></pre></td></tr></table></figure><p>变量输出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">4399</span></span><br><span class="line">b = <span class="string">&quot;ChenZhao&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;4000加上399的值为&quot;</span>,a)</span><br><span class="line"><span class="comment">#4000加上399的值为4399</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(b)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;我的姓名为&quot;</span>,b)</span><br><span class="line"><span class="comment">#我的姓名为ChenZhao</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="（3）变量命名规则"><a href="#（3）变量命名规则" class="headerlink" title="（3）变量命名规则"></a>（3）变量命名规则</h4><ul><li><p>合法</p><p>构成：字母、下划线开头，可包含数字</p><p>非关键字：避讳函数名等关键字</p><p>非空格：不能包含空格</p></li><li><p>简单易懂、见名知意</p></li></ul><h3 id="2、数据类型"><a href="#2、数据类型" class="headerlink" title="2、数据类型"></a>2、数据类型</h3><h4 id="（1）数值型"><a href="#（1）数值型" class="headerlink" title="（1）数值型"></a>（1）数值型</h4><ul><li>整数</li><li>浮点数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">4399</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(a))</span><br><span class="line"><span class="comment">#&lt;class &#x27;int&#x27;&gt;</span></span><br><span class="line">b = <span class="number">3.1415926</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(b))</span><br><span class="line"><span class="comment">#&lt;class &#x27;float&#x27;&gt;</span></span><br></pre></td></tr></table></figure><h4 id="（2）字符型"><a href="#（2）字符型" class="headerlink" title="（2）字符型"></a>（2）字符型</h4><p>引号内的内容就是字符串型变量，引号必须成双成对出现</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">&quot;My name is&quot;</span></span><br><span class="line">b = <span class="string">&quot;ChenZhao&quot;</span></span><br><span class="line">c = a + b</span><br><span class="line"><span class="built_in">print</span>(c)  </span><br><span class="line"><span class="comment">#My name is ChenZhao</span></span><br><span class="line"></span><br><span class="line">ch1 = <span class="string">&quot;4&quot;</span></span><br><span class="line">ch2 = <span class="string">&quot;5&quot;</span></span><br><span class="line"><span class="built_in">print</span>(ch1+ch2)<span class="comment">#结果为45</span></span><br><span class="line"><span class="built_in">print</span>(ch2+ch1)<span class="comment">#结果为54</span></span><br></pre></td></tr></table></figure><h4 id="（3）布尔型"><a href="#（3）布尔型" class="headerlink" title="（3）布尔型"></a>（3）布尔型</h4><ul><li><p>运算结果只有“真”和“假”</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="number">1000</span>&gt;<span class="number">1</span>)</span><br><span class="line"><span class="comment">#True</span></span><br><span class="line"><span class="built_in">print</span>(<span class="number">1</span>==<span class="number">3</span>)</span><br><span class="line"><span class="comment">#False</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="3、字符串"><a href="#3、字符串" class="headerlink" title="3、字符串"></a>3、字符串</h3><h4 id="（1）转义字符"><a href="#（1）转义字符" class="headerlink" title="（1）转义字符"></a>（1）转义字符</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">&#x27;I&#x27;</span>m a student  </span><br><span class="line">s1 = <span class="string">&quot;I&#x27;m a student&quot;</span></span><br><span class="line">s2 = <span class="string">&#x27;I\&#x27;m a student&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(s)</span><br><span class="line"><span class="comment">#SyntaxError: invalid syntax.语法错误：非法语法</span></span><br><span class="line"><span class="built_in">print</span>(s1)</span><br><span class="line"><span class="comment">#I&#x27;m a student</span></span><br><span class="line"><span class="built_in">print</span>(s2)</span><br><span class="line"><span class="comment">#I&#x27;m a student</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">&quot;My name is</span></span><br><span class="line"><span class="string">ChenZhao&quot;</span></span><br><span class="line">s1 = <span class="string">&quot;My name is\</span></span><br><span class="line"><span class="string">ChenZhao&quot;</span></span><br><span class="line">s2 = <span class="string">&quot;My name is\n ChenZhao&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(s)</span><br><span class="line"><span class="comment">#SyntaxError: unterminated string literal.语法错误：未终止的字符串文字</span></span><br><span class="line"><span class="built_in">print</span>(s1)</span><br><span class="line"><span class="comment">#My name is ChenZhao</span></span><br><span class="line"><span class="built_in">print</span>(s2)</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">My name is</span></span><br><span class="line"><span class="string"> ChenZhao</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="（2）基本运算"><a href="#（2）基本运算" class="headerlink" title="（2）基本运算"></a>（2）基本运算</h4><ul><li><p>计算长度：len(string)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">&quot;My name is ChenZhao&quot;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(s))</span><br><span class="line"><span class="comment">#19</span></span><br></pre></td></tr></table></figure></li><li><p>切片：string(开始:结束:步长)   </p><p>ps:[开始：结束)是左闭右开区间</p><p>​    python中对字符串中元素的排序如下：</p><table><thead><tr><th align="center">P</th><th align="center">y</th><th align="center">t</th><th align="center">h</th><th align="center">o</th><th align="center">n</th></tr></thead><tbody><tr><td align="center">0</td><td align="center">1</td><td align="center">2</td><td align="center">3</td><td align="center">4</td><td align="center">5</td></tr><tr><td align="center">-6</td><td align="center">-5</td><td align="center">-4</td><td align="center">-3</td><td align="center">-2</td><td align="center">-1</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">&quot;My name is ChenZhao&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(a[<span class="number">0</span>])<span class="comment">#输出字符串第一个元素M</span></span><br><span class="line"><span class="built_in">print</span>(a[<span class="number">0</span>:<span class="number">0</span>])<span class="comment">#输出字符串为空</span></span><br><span class="line"><span class="built_in">print</span>(a[<span class="number">0</span>:<span class="number">7</span>])<span class="comment">#输出字符串前7个元素My name</span></span><br><span class="line"><span class="built_in">print</span>(a[:<span class="number">7</span>])<span class="comment">#输出字符串前7个元素My name</span></span><br><span class="line"><span class="built_in">print</span>(a[<span class="number">11</span>:])<span class="comment">#从第12个元素开始切  ChenZhao</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(a[::<span class="number">1</span>])<span class="comment">#步长为1输出字符串My name is ChenZhao</span></span><br><span class="line"><span class="built_in">print</span>(a[::<span class="number">2</span>])<span class="comment">#步长为2输出字符串M aei hnho</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(a[::-<span class="number">1</span>])<span class="comment">#倒叙输出字符串oahZnehC si eman yM</span></span><br><span class="line"><span class="built_in">print</span>(a[::-<span class="number">2</span>])<span class="comment">#倒叙步长为2输出字符串   ohnh iea M</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="4、运算符"><a href="#4、运算符" class="headerlink" title="4、运算符"></a>4、运算符</h3><h4 id="（1）算数运算符"><a href="#（1）算数运算符" class="headerlink" title="（1）算数运算符"></a>（1）算数运算符</h4><p>​        ”+“、”-“、”*“、”/“、”%“、”//“、”**“</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="number">3</span>+<span class="number">2</span>)<span class="comment">#5加</span></span><br><span class="line"><span class="built_in">print</span>(<span class="number">3</span>-<span class="number">2</span>)<span class="comment">#1减</span></span><br><span class="line"><span class="built_in">print</span>(<span class="number">3</span>*<span class="number">2</span>)<span class="comment">#6乘</span></span><br><span class="line"><span class="built_in">print</span>(<span class="number">3</span>/<span class="number">2</span>)<span class="comment">#1.5除</span></span><br><span class="line"><span class="built_in">print</span>(<span class="number">3</span>%<span class="number">2</span>)<span class="comment">#1取余</span></span><br><span class="line"><span class="built_in">print</span>(<span class="number">3</span>//<span class="number">2</span>)<span class="comment">#1取整</span></span><br><span class="line"><span class="built_in">print</span>(<span class="number">3</span>**<span class="number">2</span>)<span class="comment">#9取幂</span></span><br></pre></td></tr></table></figure><h4 id="（2）赋值运算符"><a href="#（2）赋值运算符" class="headerlink" title="（2）赋值运算符"></a>（2）赋值运算符</h4><p>​        ”=“、”+=“、”-+“、”*=“、”/=“</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = ba = b</span><br><span class="line">a += ba = a + b</span><br><span class="line">a -= ba = a - b</span><br><span class="line">a *= ba = a * b</span><br><span class="line">a /= ba = a / b</span><br></pre></td></tr></table></figure><h4 id="（3）关系运算符"><a href="#（3）关系运算符" class="headerlink" title="（3）关系运算符"></a>（3）关系运算符</h4><p>​        ”&gt;“、”&lt;“、”==“、”&gt;=“、”&lt;=“、”!=“</p><p>​        关系运算符返回值为布尔类型</p><h4 id="（4）逻辑运算符"><a href="#（4）逻辑运算符" class="headerlink" title="（4）逻辑运算符"></a>（4）逻辑运算符</h4><p>​        ”&amp;“、”|“、”！“        </p><p>​        与、或、非</p><h4 id="（5）类型转换"><a href="#（5）类型转换" class="headerlink" title="（5）类型转换"></a>（5）类型转换</h4><ul><li><p>数值转字符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">&quot;圆周率是&quot;</span></span><br><span class="line">b = <span class="number">3.14</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(a+b)<span class="comment">#发生错误，字符串型变量和数值型变量不能连接起来</span></span><br><span class="line"><span class="built_in">print</span>(a+<span class="built_in">str</span>(b))<span class="comment">#圆周率是3.14</span></span><br><span class="line"><span class="built_in">print</span>(a+<span class="built_in">repr</span>(b))<span class="comment">#圆周率是3.14</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">repr</span>(a+<span class="built_in">repr</span>(b))<span class="comment">#&#x27;圆周率是3.14&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>字符转数值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a1 = <span class="string">&quot;5&quot;</span></span><br><span class="line">a2 = <span class="built_in">int</span>(a1)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(a1))<span class="comment">#&lt;class &#x27;str&#x27;&gt;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(a2))<span class="comment">#&lt;class &#x27;int&#x27;&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="5、输入与输出"><a href="#5、输入与输出" class="headerlink" title="5、输入与输出"></a>5、输入与输出</h3><ul><li><p>print()</p><p>输出、格式控制</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="number">3</span></span><br><span class="line">s = <span class="string">&quot;土豆&quot;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;我买了&quot;</span>,x,<span class="string">&quot;斤&quot;</span>,s)<span class="comment">#我买了 3 斤 土豆</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;我买了%s斤%s&quot;</span> %(x,s))<span class="comment">#我买了3斤土豆</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;我买了&#123;&#125;斤&#123;&#125;&quot;</span>.<span class="built_in">format</span>(x,s))<span class="comment">#我买了3斤土豆</span></span><br></pre></td></tr></table></figure></li><li><p>input</p><p>输入、格式控制</p><p>ps:input函数输入的都是字符串类型的变量。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="built_in">input</span>(<span class="string">&quot;输入姓名：&quot;</span>)<span class="comment">#输入姓名：</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;输入的姓名是：&quot;</span>，s)  <span class="comment">#输入的姓名是： cz</span></span><br><span class="line"></span><br><span class="line">x = <span class="built_in">input</span>(<span class="string">&quot;请输入一个数：&quot;</span>)<span class="comment">#输入50</span></span><br><span class="line"><span class="built_in">print</span>(x*<span class="number">2</span>)<span class="comment">#5050</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;x加2的值为：&quot;</span>,<span class="built_in">int</span>(x)+<span class="number">2</span>)  <span class="comment">#52</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="三、数据结构"><a href="#三、数据结构" class="headerlink" title="三、数据结构"></a>三、数据结构</h2><h3 id="1、列表"><a href="#1、列表" class="headerlink" title="1、列表"></a>1、列表</h3><h4 id="（1）定义"><a href="#（1）定义" class="headerlink" title="（1）定义"></a>（1）定义</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = [<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>]</span><br><span class="line">b = []</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(a)<span class="comment">#[1,3,5,7,9]</span></span><br><span class="line"><span class="built_in">print</span>(b)<span class="comment">#[]</span></span><br></pre></td></tr></table></figure><h4 id="（2）访问"><a href="#（2）访问" class="headerlink" title="（2）访问"></a>（2）访问</h4><ul><li>正负索引访问<img src="C:\Users\czcz5\AppData\Roaming\Typora\typora-user-images\image-20211024200104067.png" alt="image-20211024200104067"></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = [<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>]</span><br><span class="line"><span class="built_in">print</span>(a[<span class="number">0</span>])<span class="comment">#1</span></span><br><span class="line"><span class="built_in">print</span>(a[-<span class="number">2</span>])<span class="comment">#7</span></span><br><span class="line">a[<span class="number">1</span>] = <span class="number">99</span><span class="comment">#对列表中某个元素进行修改</span></span><br><span class="line"><span class="built_in">print</span>(a)<span class="comment">#[1, 99, 5, 7, 9]</span></span><br></pre></td></tr></table></figure><ul><li><p>切片访问        </p><p>列表和字符串一样都可以进行切片：a[开始:结束:步长]，[开始：结束)左闭右开区间</p></li></ul><h4 id="（3）添加"><a href="#（3）添加" class="headerlink" title="（3）添加"></a>（3）添加</h4><p>​        使用append（）函数添加列表元素</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x = [<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>]</span><br><span class="line"><span class="built_in">print</span>(x)<span class="comment">#[1, 3, 5, 7, 9]</span></span><br><span class="line">x.append(<span class="number">2</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">10</span>)</span><br><span class="line"><span class="built_in">print</span>(x)<span class="comment">#[1, 3, 5, 7, 9, 20]</span></span><br></pre></td></tr></table></figure><h4 id="（4）删除"><a href="#（4）删除" class="headerlink" title="（4）删除"></a>（4）删除</h4><p>​        使用del（）函数删除列表元素</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = [<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>]</span><br><span class="line"><span class="built_in">print</span>(a)<span class="comment">#[1, 3, 5, 7, 9]</span></span><br><span class="line"><span class="keyword">del</span> a[-<span class="number">1</span>]</span><br><span class="line"><span class="built_in">print</span>(a)<span class="comment">#[1, 3, 5, 7]</span></span><br></pre></td></tr></table></figure><h3 id="2、元组"><a href="#2、元组" class="headerlink" title="2、元组"></a>2、元组</h3><h4 id="（1）创建"><a href="#（1）创建" class="headerlink" title="（1）创建"></a>（1）创建</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a = (<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>)</span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(a))</span><br><span class="line"></span><br><span class="line">b = (<span class="number">66</span>)</span><br><span class="line">c = (<span class="number">66</span>,)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;b的类型是：&#123;&#125;/t值为：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">type</span>(b),b))<span class="comment">#b的类型是：&lt;class &#x27;int&#x27;&gt;,值为：66</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;c的类型是：&#123;&#125;/t值为：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">type</span>(c),c))<span class="comment">#c的类型是：&lt;class &#x27;tuple&#x27;&gt;,值为：(66,)</span></span><br></pre></td></tr></table></figure><h4 id="（2）访问-1"><a href="#（2）访问-1" class="headerlink" title="（2）访问"></a>（2）访问</h4><ul><li>访问方式与列表一致</li><li>索引访问</li><li>切片访问</li><li>注意不能修改元组中的值</li></ul><h4 id="（3）操作"><a href="#（3）操作" class="headerlink" title="（3）操作"></a>（3）操作</h4><ul><li><p>删除元组方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = (<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>)</span><br><span class="line"><span class="keyword">del</span> a</span><br><span class="line"><span class="built_in">print</span>(a)<span class="comment">#报错，因为此时不存在a元组</span></span><br></pre></td></tr></table></figure></li><li><p>连接的实现</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = (<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">b = (<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>)</span><br><span class="line">c = a + b</span><br><span class="line"><span class="built_in">print</span>(c)<span class="comment">#(1, 2, 3, 4, 5, 6)</span></span><br></pre></td></tr></table></figure></li><li><p>计算长度函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = (<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(a))<span class="comment">#5</span></span><br></pre></td></tr></table></figure></li><li><p>迭代</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = (<span class="number">2</span>,<span class="number">5</span>,<span class="number">8</span>)</span><br><span class="line">b = a * <span class="number">2</span></span><br><span class="line"><span class="built_in">print</span>(b)<span class="comment">#(2, 5, 8, 2, 5, 8)</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="3、字典"><a href="#3、字典" class="headerlink" title="3、字典"></a>3、字典</h3><h4 id="（1）定义-1"><a href="#（1）定义-1" class="headerlink" title="（1）定义"></a>（1）定义</h4><p>​        <code>字典：&#123;key1:value1,key2:value2,......&#125;</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = &#123;<span class="string">&quot;张三&quot;</span>:<span class="number">18</span>,</span><br><span class="line">     <span class="string">&quot;李四&quot;</span>:<span class="number">20</span>,</span><br><span class="line">    &#125;</span><br><span class="line"><span class="built_in">print</span>(a)<span class="comment">#&#123;&#x27;张三&#x27;: 18, &#x27;李四&#x27;: 20&#125;</span></span><br></pre></td></tr></table></figure><h4 id="（2）引用及修改"><a href="#（2）引用及修改" class="headerlink" title="（2）引用及修改"></a>（2）引用及修改</h4><p>​        字典是无序的，只能通过key值来引用和修改对应的value</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a = &#123;</span><br><span class="line">    <span class="string">&quot;张三&quot;</span>:<span class="number">18</span>,</span><br><span class="line">     <span class="string">&quot;李四&quot;</span>:<span class="number">20</span>,</span><br><span class="line">    &#125;</span><br><span class="line"><span class="built_in">print</span>(a)<span class="comment">#&#123;&#x27;张三&#x27;: 18, &#x27;李四&#x27;: 20&#125;</span></span><br><span class="line"><span class="built_in">print</span>(a[<span class="string">&quot;张三&quot;</span>]) <span class="comment">#18</span></span><br><span class="line">a[<span class="string">&quot;李四&quot;</span>] = <span class="number">35</span>   </span><br><span class="line"><span class="built_in">print</span>(a)<span class="comment">#&#123;&#x27;张三&#x27;: 18, &#x27;李四&#x27;: 35&#125;</span></span><br></pre></td></tr></table></figure><h4 id="（3）增加"><a href="#（3）增加" class="headerlink" title="（3）增加"></a>（3）增加</h4><p>只能添加字典中没有的元素</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a = &#123;</span><br><span class="line">    <span class="string">&quot;张三&quot;</span>:<span class="number">18</span>,</span><br><span class="line">    <span class="string">&quot;李四&quot;</span>:<span class="number">20</span>,</span><br><span class="line">&#125;</span><br><span class="line">a[<span class="string">&quot;王五&quot;</span>] = <span class="number">40</span></span><br><span class="line"><span class="built_in">print</span>(a)    <span class="comment">#&#123;&#x27;张三&#x27;: 18, &#x27;李四&#x27;: 20, &#x27;王五&#x27;: 40&#125;</span></span><br></pre></td></tr></table></figure><h4 id="（4）删除-1"><a href="#（4）删除-1" class="headerlink" title="（4）删除"></a>（4）删除</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">a = &#123;</span><br><span class="line">    <span class="string">&quot;张三&quot;</span>:<span class="number">18</span>,</span><br><span class="line">    <span class="string">&quot;李四&quot;</span>:<span class="number">20</span>,</span><br><span class="line">    <span class="string">&quot;王五&quot;</span>:<span class="number">40</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">del</span> a[<span class="string">&quot;王五&quot;</span>]</span><br><span class="line"><span class="built_in">print</span>(a)    <span class="comment">#&#123;&#x27;张三&#x27;: 18, &#x27;李四&#x27;: 20&#125;</span></span><br></pre></td></tr></table></figure><h3 id="4、集合"><a href="#4、集合" class="headerlink" title="4、集合"></a>4、集合</h3><h4 id="（1）定义-2"><a href="#（1）定义-2" class="headerlink" title="（1）定义"></a>（1）定义</h4><p>和数学中集合的概念一样，集合元素具有唯一性、确定性、无序性</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#直接使用&#123;&#125;定义一个集合</span></span><br><span class="line">a = &#123;<span class="string">&quot;ChenZhao&quot;</span>,<span class="string">&quot;4399&quot;</span>,<span class="string">&quot;这是一只猫！&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用set()函数将列表、元组对象强制转换成集合对象</span></span><br><span class="line">b = <span class="built_in">set</span>([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">1</span>])</span><br><span class="line">c = <span class="built_in">set</span>((<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(b))<span class="comment">#&lt;class &#x27;set&#x27;&gt;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(c))<span class="comment">#&lt;class &#x27;set&#x27;&gt;</span></span><br><span class="line"><span class="built_in">print</span>（b）  <span class="comment">#&#123;1, 2, 3, 4&#125;</span></span><br></pre></td></tr></table></figure><h4 id="（2）添加"><a href="#（2）添加" class="headerlink" title="（2）添加"></a>（2）添加</h4><p>​        <code>setname.add(element)</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x = &#123;<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>&#125;</span><br><span class="line">x.add(<span class="number">4399</span>)</span><br><span class="line"><span class="built_in">print</span>(x)<span class="comment">#&#123;1, 3, 5, 4399&#125;</span></span><br></pre></td></tr></table></figure><h4 id="（3）删除"><a href="#（3）删除" class="headerlink" title="（3）删除"></a>（3）删除</h4><p>del：删除整个集合 <code>del setname</code></p><p>pop()方法：官方文档是说随机删除一个元素<code>setname.pop()</code>  //实际上对于字符串是随机删除，对于数字是删最小的</p><p>remove()方法：删除指定一个元素 <code>setname.remove(element)</code></p><p>clear()方法：删除全部元素，但集合还在，只是为空集合而已<code>setname.clear()</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">x = &#123;<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="string">&quot;ChenZhao&quot;</span>,<span class="string">&quot;4399&quot;</span>,<span class="number">10086</span>&#125;</span><br><span class="line">x.pop()</span><br><span class="line"><span class="built_in">print</span>(x)<span class="comment">#&#123;&#x27;ChenZhao&#x27;, 3, 5, 10086, &#x27;4399&#x27;&#125;</span></span><br><span class="line">x.remove(<span class="number">5</span>)</span><br><span class="line"><span class="built_in">print</span>(x)<span class="comment">#&#123;3, 10086, &#x27;ChenZhao&#x27;, &#x27;4399&#x27;&#125;</span></span><br><span class="line">x.clear()</span><br><span class="line"><span class="built_in">print</span>(x)<span class="comment">#set()</span></span><br><span class="line"><span class="keyword">del</span> x</span><br><span class="line"><span class="built_in">print</span>(x)<span class="comment">#报错name &#x27;x&#x27; is not defined</span></span><br></pre></td></tr></table></figure><h4 id="（4）运算"><a href="#（4）运算" class="headerlink" title="（4）运算"></a>（4）运算</h4><p>​        交集：&amp;        <code>setname1 &amp; setname2</code>    setname1与setname2中都有的元素</p><p>​        并集：|        <code>setname1 | setname2</code>     setname1与setname2中所有的元素</p><p>​        差集：-        <code>setname1 - setname2</code>    setname1中有setname2中没有的元素</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x = &#123;<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;</span><br><span class="line">y = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(x &amp; y) <span class="comment">#&#123;2, 3&#125;</span></span><br><span class="line"><span class="built_in">print</span>(x | y)<span class="comment">#&#123;1, 2, 3, 4, 5&#125;</span></span><br><span class="line"><span class="built_in">print</span>(x - y)<span class="comment">#&#123;4, 5&#125;</span></span><br></pre></td></tr></table></figure><h3 id="5、小总结"><a href="#5、小总结" class="headerlink" title="5、小总结"></a>5、小总结</h3><table><thead><tr><th align="center">数据结构</th><th align="center">可变性</th><th align="center">可重复性</th><th align="center">有序性</th><th align="center">定义符号</th></tr></thead><tbody><tr><td align="center">列表（list）</td><td align="center">可变</td><td align="center">可重复</td><td align="center">有序</td><td align="center">[      ]</td></tr><tr><td align="center">元组（tuple）</td><td align="center">不可变</td><td align="center">可重复</td><td align="center">有序</td><td align="center">(      )</td></tr><tr><td align="center">字典（dictionary）</td><td align="center">可变</td><td align="center">可重复</td><td align="center">无序</td><td align="center">{key:value,…}</td></tr><tr><td align="center">集合（set）</td><td align="center">可变</td><td align="center">不可重复</td><td align="center">无序</td><td align="center">{      }</td></tr></tbody></table><h2 id="四、分支结构"><a href="#四、分支结构" class="headerlink" title="四、分支结构"></a>四、分支结构</h2><h3 id="1、单分支"><a href="#1、单分支" class="headerlink" title="1、单分支"></a>1、单分支</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> 条件表达式:</span><br><span class="line">语句<span class="number">1</span></span><br><span class="line"><span class="comment">#满足条件表达式，就执行语句1；若不满足，什么也不做。注意python语句1要强缩进</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="number">11</span></span><br><span class="line">y = <span class="number">22</span></span><br><span class="line"><span class="keyword">if</span> x &lt; y:</span><br><span class="line">    x, y = y, x</span><br><span class="line"><span class="built_in">print</span>(x,y)<span class="comment">#22  11</span></span><br></pre></td></tr></table></figure><h3 id="2、双分支"><a href="#2、双分支" class="headerlink" title="2、双分支"></a>2、双分支</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> 条件表达式:</span><br><span class="line">    语句<span class="number">1</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">语句<span class="number">2</span></span><br><span class="line"><span class="comment">#满足条件表达式，执行语句1；不满足，则执行语句2</span></span><br></pre></td></tr></table></figure><h3 id="3、多分支"><a href="#3、多分支" class="headerlink" title="3、多分支"></a>3、多分支</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> 条件表达式<span class="number">1</span>:</span><br><span class="line">语句<span class="number">1</span></span><br><span class="line"><span class="keyword">elif</span> 条件表达式<span class="number">2</span>:</span><br><span class="line">    语句<span class="number">2</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    语句<span class="number">3</span></span><br><span class="line"><span class="comment">#逐个对条件表达式进行判断，成立则执行对应事件；否则执行语句3</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">grade = <span class="number">80</span></span><br><span class="line"><span class="keyword">if</span> grade &lt; <span class="number">60</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;成绩不合格&quot;</span>)</span><br><span class="line"><span class="keyword">elif</span> grade &lt; <span class="number">90</span>:<span class="comment">#等价于[60,90)</span></span><br><span class="line">    <span class="keyword">if</span> grade &lt; <span class="number">80</span>:<span class="comment">#等价于[60,80)</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;成绩及格&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:<span class="comment">#等价于[80,90)</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;成绩良好&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>：   <span class="comment">#等价于[90,,,)</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;成绩优秀&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="4、内联if-if表达式"><a href="#4、内联if-if表达式" class="headerlink" title="4、内联if / if表达式"></a>4、内联if / if表达式</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">值<span class="number">1</span> <span class="keyword">if</span> 条件 <span class="keyword">else</span> 值<span class="number">2</span></span><br><span class="line"><span class="comment">#先对条件进行判断，条件成立返回值1，否则返回值2</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">54</span></span><br><span class="line">b = <span class="number">99</span></span><br><span class="line"><span class="built_in">max</span> = a <span class="keyword">if</span> a&gt;b <span class="keyword">else</span> b</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">max</span>)<span class="comment">#99</span></span><br><span class="line"><span class="built_in">print</span>(a <span class="keyword">if</span> a&lt;b <span class="keyword">else</span> b) <span class="comment">#54</span></span><br></pre></td></tr></table></figure><h3 id="5、条件语句"><a href="#5、条件语句" class="headerlink" title="5、条件语句"></a>5、条件语句</h3><p>​    比较运算符：&gt;、&lt;、&gt;=、&lt;=</p><p>​    逻辑运算符：and  or  not  （与、或、非）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#and运算符的运用</span></span><br><span class="line">username = <span class="built_in">input</span>(<span class="string">&quot;请输入用户名：&quot;</span>)</span><br><span class="line">password = <span class="built_in">input</span>(<span class="string">&quot;请输入密码：&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> username == <span class="string">&quot;chenzhao&quot;</span> <span class="keyword">and</span> password == <span class="string">&quot;12345&quot;</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;登录成功！&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;用户名或密码错误！&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#or运算符的运用</span></span><br><span class="line">age = <span class="number">45</span></span><br><span class="line"><span class="keyword">if</span> age &gt;<span class="number">60</span> <span class="keyword">or</span> age &lt;<span class="number">18</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;您可以免费领取公园门票&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;请购买门票&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#not运算符的运用</span></span><br><span class="line">age = <span class="number">17</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> age &gt; <span class="number">18</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;未成年人禁止购买烟酒！&quot;</span>)</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;您已成年，可以购买烟酒&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="五、循环结构"><a href="#五、循环结构" class="headerlink" title="五、循环结构"></a>五、循环结构</h2><h3 id="1、for-in循环"><a href="#1、for-in循环" class="headerlink" title="1、for-in循环"></a>1、for-in循环</h3><h4 id="（1）语法构造"><a href="#（1）语法构造" class="headerlink" title="（1）语法构造"></a>（1）语法构造</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> 变量 <span class="keyword">in</span> 集合:</span><br><span class="line">    具体操作</span><br><span class="line"><span class="comment">#针对可迭代对象例如集合、列表、字符串等；其循环的次数，取决于集合的大小</span></span><br></pre></td></tr></table></figure><h4 id="（2）遍历列表和元组"><a href="#（2）遍历列表和元组" class="headerlink" title="（2）遍历列表和元组"></a>（2）遍历列表和元组</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">a = [<span class="string">&quot;I&quot;</span>,<span class="string">&quot;am&quot;</span>,<span class="string">&quot;chen&quot;</span>,<span class="string">&quot;zhao&quot;</span>,<span class="number">555</span>,<span class="number">4399</span>]</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> a:<span class="comment">#遍历列表中的所有元素</span></span><br><span class="line">    <span class="built_in">print</span>(x)</span><br><span class="line"><span class="keyword">for</span> index, name <span class="keyword">in</span> <span class="built_in">enumerate</span>(a):  <span class="comment">#遍历列表元素下标及元素</span></span><br><span class="line">    <span class="built_in">print</span>(index,name)</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">#元组相当于特殊的列表，所以遍历方式大相径庭</span></span><br><span class="line">a = (<span class="string">&quot;I&quot;</span>,<span class="string">&quot;am&quot;</span>,<span class="string">&quot;chen&quot;</span>,<span class="string">&quot;zhao&quot;</span>,<span class="number">555</span>,<span class="number">4399</span>)</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> a:<span class="comment">#遍历元组中的所有元素</span></span><br><span class="line">    <span class="built_in">print</span>(x)</span><br><span class="line"><span class="keyword">for</span> index, name <span class="keyword">in</span> <span class="built_in">enumerate</span>(a):  <span class="comment">#遍历列表元素下标及元素</span></span><br><span class="line">    <span class="built_in">print</span>(index,name)</span><br></pre></td></tr></table></figure><h4 id="（3）遍历字典"><a href="#（3）遍历字典" class="headerlink" title="（3）遍历字典"></a>（3）遍历字典</h4><ul><li>items():返回字典内key-value对</li><li>keys():返回字典内所有key列表</li><li>values():返回字典中所有value列表</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">x = &#123;<span class="string">&quot;张三&quot;</span>:<span class="number">18</span>,</span><br><span class="line">     <span class="string">&quot;李四&quot;</span>:<span class="number">20</span>,</span><br><span class="line">     <span class="string">&quot;王五&quot;</span>:<span class="number">34</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">for</span> a,b <span class="keyword">in</span> x.items():</span><br><span class="line">    <span class="built_in">print</span>(a,b)</span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> x.keys():</span><br><span class="line">    <span class="built_in">print</span>(c)</span><br><span class="line"><span class="keyword">for</span> d <span class="keyword">in</span> x.values():</span><br><span class="line">    <span class="built_in">print</span>(d)</span><br></pre></td></tr></table></figure><h4 id="（4）遍历字符串"><a href="#（4）遍历字符串" class="headerlink" title="（4）遍历字符串"></a>（4）遍历字符串</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">str1 = <span class="string">&quot;I am a student&quot;</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> str1:</span><br><span class="line">    <span class="built_in">print</span>(x,end = <span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="2、用range-函数控制for-in次数"><a href="#2、用range-函数控制for-in次数" class="headerlink" title="2、用range()函数控制for-in次数"></a>2、用range()函数控制for-in次数</h3><h4 id="（1）语法结构"><a href="#（1）语法结构" class="headerlink" title="（1）语法结构"></a>（1）语法结构</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">range</span> (初始值，终止值，步长)</span><br><span class="line"><span class="comment">#可生成一个可迭代对象，其本质是生成数字列表，可指定初始值、终值、步长</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">10</span>,<span class="number">3</span>)<span class="comment">#生成可迭代对象a</span></span><br><span class="line"><span class="built_in">print</span>(a)   <span class="comment">#range(1, 10, 3)</span></span><br><span class="line">b = <span class="built_in">list</span>(a)   <span class="comment">#把可迭代对象转为一个列表</span></span><br><span class="line"><span class="built_in">print</span>(b)   <span class="comment">#[1, 4, 7]</span></span><br><span class="line"></span><br><span class="line">c = <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">5</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(c))<span class="comment">#[1, 2, 3, 4]</span></span><br><span class="line"></span><br><span class="line">d = <span class="built_in">range</span>(<span class="number">5</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(d))<span class="comment">#[0, 1, 2, 3, 4]</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">5</span>):</span><br><span class="line"><span class="built_in">print</span>(x,<span class="string">&quot;循环输出&quot;</span>)</span><br></pre></td></tr></table></figure><h4 id="（2）循环"><a href="#（2）循环" class="headerlink" title="（2）循环"></a>（2）循环</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#使用循环计算1-100的和</span></span><br><span class="line"><span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">101</span>):</span><br><span class="line"><span class="built_in">sum</span> = <span class="built_in">sum</span> + i</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">sum</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用sum()函数计算1-100的和</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">sum</span>(<span class="built_in">range</span>(<span class="number">1</span>,<span class="number">101</span>)))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#用控制步长的方式求1-100所有的奇数</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">101</span>,<span class="number">2</span>):</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line">   </span><br><span class="line"><span class="comment">#通过选择结构实现求1-100的所有奇数</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">101</span>):</span><br><span class="line">    <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">1</span>:</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br></pre></td></tr></table></figure><h3 id="3、while循环"><a href="#3、while循环" class="headerlink" title="3、while循环"></a>3、while循环</h3><p>​        for循环常用于遍历，while循环常用于条件的判断</p><h4 id="（1）语法结构-1"><a href="#（1）语法结构-1" class="headerlink" title="（1）语法结构"></a>（1）语法结构</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> 条件表达式:</span><br><span class="line">    循环体</span><br><span class="line"><span class="comment">#条件为真时运行循环体；条件为假时跳出循环体,不然为死循环</span></span><br></pre></td></tr></table></figure><h4 id="（3）案例"><a href="#（3）案例" class="headerlink" title="（3）案例"></a>（3）案例</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> i &lt; <span class="number">5</span>:</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line">    i += <span class="number">1</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">not</span> name:</span><br><span class="line">name = <span class="built_in">input</span>(<span class="string">&quot;请输入姓名（不能为空）：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;你好啊！&quot;</span>,name)</span><br></pre></td></tr></table></figure><h4 id="（4）while遍历"><a href="#（4）while遍历" class="headerlink" title="（4）while遍历"></a>（4）while遍历</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#############################</span></span><br><span class="line">a = [<span class="number">7</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">55</span>]</span><br><span class="line">i = <span class="number">0</span> </span><br><span class="line"><span class="keyword">while</span> i &lt; <span class="built_in">len</span>(a):</span><br><span class="line"><span class="built_in">print</span>(a[i])</span><br><span class="line">    i += <span class="number">1</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#使用while循环逐个从特定集合中找出奇数和偶数</span></span><br><span class="line">x = [<span class="number">34</span>,<span class="number">37</span>,<span class="number">47</span>,<span class="number">44</span>,<span class="number">55</span>,<span class="number">88</span>]</span><br><span class="line">even = []</span><br><span class="line">odd = []</span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> i&lt;<span class="built_in">len</span>(x):</span><br><span class="line">    <span class="keyword">if</span> x[i]%<span class="number">2</span>==<span class="number">0</span>:</span><br><span class="line">        even.append(x[i])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        odd.append(x[i])</span><br><span class="line">    i+=<span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(even)<span class="comment">#[34, 44, 88]</span></span><br><span class="line"><span class="built_in">print</span>(odd)<span class="comment">#[37, 47, 55]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#使用while循环随机从特定集合中找出奇数和偶数</span></span><br><span class="line">x = [<span class="number">34</span>,<span class="number">37</span>,<span class="number">47</span>,<span class="number">44</span>,<span class="number">55</span>,<span class="number">88</span>]</span><br><span class="line">even = []</span><br><span class="line">odd = []</span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">len</span>(x)&gt;<span class="number">0</span>:</span><br><span class="line">    n=x.pop()</span><br><span class="line">    <span class="keyword">if</span> (n%<span class="number">2</span>==<span class="number">0</span>):</span><br><span class="line">        even.append(n)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        odd.append(n)</span><br><span class="line"><span class="built_in">print</span>(even)<span class="comment">#[88, 44, 34]</span></span><br><span class="line"><span class="built_in">print</span>(odd)<span class="comment">#[55, 47, 37]</span></span><br></pre></td></tr></table></figure><h3 id="5、跳出循环break"><a href="#5、跳出循环break" class="headerlink" title="5、跳出循环break"></a>5、跳出循环break</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">循环（<span class="keyword">while</span>或<span class="keyword">for</span> <span class="keyword">in</span>）</span><br><span class="line"><span class="keyword">if</span> 条件表达式</span><br><span class="line">    语句<span class="number">1</span></span><br><span class="line">        语句<span class="number">2</span></span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line">        语句<span class="number">3</span></span><br><span class="line">        ...</span><br><span class="line"><span class="comment">#完全结束一个循环体，跳出循环</span></span><br></pre></td></tr></table></figure><h3 id="6、跳出循环continue"><a href="#6、跳出循环continue" class="headerlink" title="6、跳出循环continue"></a>6、跳出循环continue</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">循环（<span class="keyword">while</span>或<span class="keyword">for</span> <span class="keyword">in</span>）</span><br><span class="line"><span class="keyword">if</span> 条件表达式</span><br><span class="line">    语句<span class="number">1</span></span><br><span class="line">        语句<span class="number">2</span></span><br><span class="line">    <span class="keyword">continue</span></span><br><span class="line">        语句<span class="number">3</span></span><br><span class="line">        ...</span><br><span class="line"><span class="comment">#跳过当前循环，进入下一次循环，级本次循环的后续不再进行，从下一轮开始</span></span><br></pre></td></tr></table></figure><h2 id="六、函数"><a href="#六、函数" class="headerlink" title="六、函数"></a>六、函数</h2><h3 id="1、函数分类"><a href="#1、函数分类" class="headerlink" title="1、函数分类"></a>1、函数分类</h3><ul><li><p>内置函数：python自带的</p></li><li><p>自定义函数：程序员字句定义的</p></li><li><p>模块函数：单独放在模块中的函数，可以是第三方开发的，也可以是python自带的</p></li></ul><h3 id="2、内置函数"><a href="#2、内置函数" class="headerlink" title="2、内置函数"></a>2、内置函数</h3><table><thead><tr><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th></tr></thead><tbody><tr><td align="center">abs()</td><td align="center">delattr()</td><td align="center">hash()</td><td align="center">memoryview()</td><td align="center">set()</td></tr><tr><td align="center">all()</td><td align="center">dict()</td><td align="center">help()</td><td align="center">min()</td><td align="center">setattr()</td></tr><tr><td align="center">any()</td><td align="center">dir()</td><td align="center">hex()</td><td align="center">next()</td><td align="center">slice()</td></tr><tr><td align="center">ascii()</td><td align="center">divmod()</td><td align="center">id()</td><td align="center">object()</td><td align="center">sorted()</td></tr><tr><td align="center">bin()</td><td align="center">enumerate()</td><td align="center">input()</td><td align="center">oct()</td><td align="center">staticmethod()</td></tr><tr><td align="center">bool()</td><td align="center">eval()</td><td align="center">int()</td><td align="center">open()</td><td align="center">str()</td></tr><tr><td align="center">breakpoint()</td><td align="center">exec()</td><td align="center">isinstance()</td><td align="center">ord()</td><td align="center">sum()</td></tr><tr><td align="center">bytearry()</td><td align="center">filter()</td><td align="center">issubclass()</td><td align="center">pow()</td><td align="center">super()</td></tr><tr><td align="center">bytes()</td><td align="center">float()</td><td align="center">iter()</td><td align="center">print()</td><td align="center">tuple()</td></tr><tr><td align="center">callable()</td><td align="center">format()</td><td align="center">len()</td><td align="center">property()</td><td align="center">type()</td></tr><tr><td align="center">chr()</td><td align="center">frozenset()</td><td align="center">list()</td><td align="center">range()</td><td align="center">vars()</td></tr><tr><td align="center">classmethod()</td><td align="center">getattr()</td><td align="center">locals()</td><td align="center">repe()</td><td align="center">zip()</td></tr><tr><td align="center">compile()</td><td align="center">globals()</td><td align="center">map()</td><td align="center">reversed()</td><td align="center"><em>import</em>_()</td></tr><tr><td align="center">complex()</td><td align="center">hasattr()</td><td align="center">max()</td><td align="center">round()</td><td align="center">共69个</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##构造可迭代对象的函数：list()、tuple()、set()、dict()</span></span><br><span class="line">a = <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">1</span>,<span class="number">11</span>))<span class="comment">#列表</span></span><br><span class="line">b = <span class="built_in">tuple</span>(<span class="built_in">range</span>(<span class="number">1</span>,<span class="number">11</span>))<span class="comment">#元组</span></span><br><span class="line">c = <span class="built_in">set</span>(<span class="built_in">range</span>(<span class="number">1</span>,<span class="number">11</span>))<span class="comment">#集合</span></span><br><span class="line">d = <span class="built_in">dict</span>(陈朝=<span class="number">18</span>,张卓=<span class="number">18</span>)   <span class="comment">#元组</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&#123;&#125;\n&#123;&#125;\n&#123;&#125;\n&#123;&#125;&quot;</span>.<span class="built_in">format</span>(a,b,c,d))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##有关数学运算方面的函数：min()、max()、sum()、pow()、abs()</span></span><br><span class="line">x = [<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">10</span>,-<span class="number">50</span>]</span><br><span class="line">a = <span class="built_in">min</span>(x)<span class="comment">#求最小</span></span><br><span class="line">b = <span class="built_in">max</span>(x)<span class="comment">#求最大</span></span><br><span class="line">c = <span class="built_in">sum</span>(x)<span class="comment">#求和</span></span><br><span class="line">d = <span class="built_in">pow</span>(x[<span class="number">5</span>],x[<span class="number">9</span>])<span class="comment">#求幂</span></span><br><span class="line">e = <span class="built_in">abs</span>(x[<span class="number">10</span>])<span class="comment">#求模、求绝对值</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&#123;&#125;\n&#123;&#125;\n&#123;&#125;\n&#123;&#125;\n&#123;&#125;&quot;</span>.<span class="built_in">format</span>(a,b,c,d,e))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##排序组合函数：sorted()、zip()</span></span><br><span class="line"><span class="comment">#sorted()函数保留原对象不变对所有可迭代的对象进行排序操作</span></span><br><span class="line">x = [<span class="number">132</span>,<span class="number">23</span>,<span class="number">232</span>,<span class="number">543</span>,<span class="number">75</span>,<span class="number">790</span>]</span><br><span class="line"><span class="built_in">print</span>(x)<span class="comment">#[132, 23, 232, 543, 75, 790]</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">sorted</span>(x)) <span class="comment">#[23, 75, 132, 232, 543, 790]</span></span><br><span class="line"><span class="built_in">print</span>(x)<span class="comment">#[132, 23, 232, 543, 75, 790]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#zip()函数用于将可迭代的对象作为参数，将对象中对应的元素打包成元组，并返回这些由元组组成的列表</span></span><br><span class="line">x = [<span class="number">2</span>,<span class="number">5</span>,<span class="number">8</span>]</span><br><span class="line">y = [<span class="number">1</span>,<span class="number">7</span>,<span class="number">9</span>]</span><br><span class="line">xy = <span class="built_in">zip</span>(x,y)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(xy))<span class="comment">#[(2, 1), (5, 7), (8, 9)]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#all()函数用于判断给定的可迭代参数中的所有元素，仅当全为Ture返回True,一个False返回False</span></span><br><span class="line"><span class="comment">#元素除是0、空、None、False外全是True</span></span><br><span class="line">a = [<span class="number">1.3</span><span class="number">.5</span><span class="number">.7</span><span class="number">.9</span>]</span><br><span class="line">b = (<span class="number">0</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">8</span>)</span><br><span class="line">c = [<span class="string">&quot;Chen&quot;</span>,<span class="string">&quot;Zhao&quot;</span>,<span class="number">4399</span>,<span class="string">&quot;&quot;</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">all</span>(a))<span class="comment">#True</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">all</span>(b))<span class="comment">#False</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">all</span>(c))<span class="comment">#Ture</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#any()函数用于判断给定的可迭代参数中的所有元素，全为False返回False,一个Ture返回Ture</span></span><br><span class="line"><span class="comment">#元素除是0、空、None、False外全是True</span></span><br><span class="line">d = [<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>]</span><br><span class="line">e = [<span class="string">&quot;&quot;</span>,<span class="literal">False</span>,<span class="number">0</span>,<span class="literal">None</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">any</span>(d))<span class="comment">#Ture</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">any</span>(e))<span class="comment">#False</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#例外：当空元组或空列表，使用all()函数，返回值为真</span></span><br><span class="line">f = []</span><br><span class="line">g = ()</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">all</span>(f),<span class="built_in">any</span>(f))<span class="comment">#Ture  False</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">all</span>(g),<span class="built_in">any</span>(g))<span class="comment">#Ture  False</span></span><br></pre></td></tr></table></figure><h3 id="3、自定义函数"><a href="#3、自定义函数" class="headerlink" title="3、自定义函数"></a>3、自定义函数</h3><h4 id="（1）自定义函数语法结构"><a href="#（1）自定义函数语法结构" class="headerlink" title="（1）自定义函数语法结构"></a>（1）自定义函数语法结构</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> 函数名(<span class="params">[参数列表...]</span>):</span></span><br><span class="line">    [函数注释]</span><br><span class="line">    函数体</span><br><span class="line">    [<span class="keyword">return</span> 返回值]</span><br></pre></td></tr></table></figure><h4 id="（2）嵌套函数"><a href="#（2）嵌套函数" class="headerlink" title="（2）嵌套函数"></a>（2）嵌套函数</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">computer</span> (<span class="params"><span class="built_in">type</span>,n</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">double</span> (<span class="params">n</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span>*n</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">half</span> (<span class="params">n</span>):</span></span><br><span class="line">        <span class="keyword">return</span> n/<span class="number">2</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sqr</span> (<span class="params">n</span>):</span></span><br><span class="line">        <span class="keyword">return</span> n*n</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">type</span> == <span class="string">&quot;double&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> double(n)</span><br><span class="line">    <span class="keyword">elif</span> <span class="built_in">type</span> == <span class="string">&quot;half&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> half(n)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> sqr(n)</span><br><span class="line">    </span><br><span class="line"><span class="built_in">print</span>(computer(<span class="string">&quot;half&quot;</span>,<span class="number">10</span>))<span class="comment">#5.0</span></span><br><span class="line"><span class="built_in">print</span>(computer(<span class="string">&quot;double&quot;</span>,<span class="number">10</span>))<span class="comment">#20</span></span><br><span class="line"><span class="built_in">print</span>(computer(<span class="string">&quot;sqr&quot;</span>,<span class="number">10</span>))<span class="comment">#100</span></span><br></pre></td></tr></table></figure><h4 id="（3）匿名函数"><a href="#（3）匿名函数" class="headerlink" title="（3）匿名函数"></a>（3）匿名函数</h4><p>匿名函数就是指没有名称的函数，匿名函数主要用于不想费神去给众多只有一句表达式的简单函数设计名字的情况，语法结构如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">lambda</span> [参数列表]: 表达式</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">computer</span> (<span class="params"><span class="built_in">type</span></span>):</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">type</span> == <span class="string">&quot;double&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">lambda</span> n:n*<span class="number">2</span></span><br><span class="line">    <span class="keyword">elif</span> <span class="built_in">type</span> == <span class="string">&quot;half&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">lambda</span> n:n/<span class="number">2</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">lambda</span> n:n*n</span><br><span class="line">    </span><br><span class="line">fun = computer(<span class="string">&quot;half&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(fun(<span class="number">10</span>))</span><br><span class="line">fun = computer(<span class="string">&quot;double&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(fun(<span class="number">10</span>))</span><br><span class="line">fun = computer(<span class="string">&quot;test&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(fun(<span class="number">10</span>))</span><br></pre></td></tr></table></figure><h3 id="4、作用域"><a href="#4、作用域" class="headerlink" title="4、作用域"></a>4、作用域</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在模块中定义的是全局变量</span></span><br><span class="line"><span class="comment">#在函数中定义的是局部变量</span></span><br><span class="line"><span class="comment">#在嵌套函数外层闭包空间定义的是非局部变量</span></span><br><span class="line"></span><br><span class="line">x = <span class="number">10</span><span class="comment">#这是全局变量</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">outer</span> ():</span></span><br><span class="line">    x = <span class="number">20</span> <span class="comment">#对outer来说局部变量；对inner来说是非局部变量</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">inner</span>():</span></span><br><span class="line">        x = <span class="number">30</span> <span class="comment">#对inner来说是局部变量</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;调用inter函数打印:x = &#123;0:d&#125;&quot;</span>.<span class="built_in">format</span>(x))</span><br><span class="line">    </span><br><span class="line">    inner()<span class="comment">#结果为x = 30</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;调用outer函数打印:x = &#123;0:d&#125;&quot;</span>.<span class="built_in">format</span>(x))   </span><br><span class="line">outer()<span class="comment">#结果为x = 20</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;模块中打印:x = &#123;0:d&#125;&quot;</span>.<span class="built_in">format</span>(x))   <span class="comment">#结果为x = 10</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#inner()函数可以访问x = 10 和x = 20以及x = 30,但是无法改变其值</span></span><br><span class="line"><span class="comment">#outer()函数可以访问x = 10 和x = 20,无法访问x = 30,且无法修改其值 </span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#自定义函数内实现改变全局变量的值:使用global关键字修饰</span></span><br><span class="line"><span class="built_in">str</span> = <span class="string">&quot;I love you&quot;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Befor change:&quot;</span>+<span class="built_in">str</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">changestr</span>():</span></span><br><span class="line">    <span class="keyword">global</span> <span class="built_in">str</span></span><br><span class="line">    <span class="built_in">str</span> = <span class="string">&quot;I no longer love you&quot;</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;After changestr:&quot;</span>+<span class="built_in">str</span>)</span><br><span class="line">    </span><br><span class="line">changestr()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;After method:&quot;</span>+<span class="built_in">str</span>)</span><br></pre></td></tr></table></figure><h2 id="七、模块与包"><a href="#七、模块与包" class="headerlink" title="七、模块与包"></a>七、模块与包</h2><h3 id="1、标准模块"><a href="#1、标准模块" class="headerlink" title="1、标准模块"></a>1、标准模块</h3><h4 id="（1）基本了解的"><a href="#（1）基本了解的" class="headerlink" title="（1）基本了解的"></a>（1）基本了解的</h4><p>来源：标准模块、自定义模块、第三方模块</p><p>作用：满足特定的目的和需求例如：网络管理、加密处理、数学计算、数据分析、图像处理</p><p>构造：标准的或第三方的，直接使用import调用；自定义的放在一个.py文件中；多个函数构成一个模块，多个模块构成一个包，放在一个文件夹内</p><p>使用：使用import关键字引用；使用from、import语句</p><h4 id="（2）语法规则"><a href="#（2）语法规则" class="headerlink" title="（2）语法规则"></a>（2）语法规则</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> 模块名<span class="comment">#导入</span></span><br><span class="line">模块名.函数名()  <span class="comment">#使用</span></span><br></pre></td></tr></table></figure><h4 id="（3）六大类标准模块分类基本了解"><a href="#（3）六大类标准模块分类基本了解" class="headerlink" title="（3）六大类标准模块分类基本了解"></a>（3）六大类标准模块分类基本了解</h4><ul><li><p>os：提供了许多与操作系统交互的函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="built_in">print</span>(os.getcwd())<span class="comment">#getcwd：get Current Working Directory 获取当前工作路径</span></span><br></pre></td></tr></table></figure></li><li><p>sys：系统相关的参数和函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="built_in">print</span>(sys.argv)</span><br><span class="line"><span class="built_in">print</span>(sys.platform)</span><br><span class="line"><span class="built_in">print</span>(sys.path)</span><br></pre></td></tr></table></figure></li><li><p>time：时间相关的函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line">start = time.time()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">500000</span>):</span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line">time.sleep(<span class="number">2</span>)</span><br><span class="line">end = time.time()</span><br><span class="line"><span class="built_in">print</span>(end - start)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(time.localtime())</span><br></pre></td></tr></table></figure></li><li><p>math：提供对浮点数学的底层c库函数的访问</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;cosΠ/2:&#123;&#125;\nsin(Π/2):&#123;&#125;&quot;</span>.<span class="built_in">format</span>(math.cos(math.pi/<span class="number">2</span>),math.sin(math.pi/<span class="number">2</span>)))</span><br></pre></td></tr></table></figure></li><li><p>random：提供了随机选择的工具</p><ul><li>与整数相关的：randrange(start,stop,step)、randint(a,b)</li><li>与序列相关的：choice(seq)、shuffle(x)、sample(population,k)</li><li>实数值相关：random()、uniform(a,b)</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="comment">#与整数相关</span></span><br><span class="line"><span class="built_in">print</span>(random.randrange(<span class="number">1</span>,<span class="number">100</span>,<span class="number">1</span>))<span class="comment">#产生[1,100)内步长为1的任意一个随机数</span></span><br><span class="line"><span class="built_in">print</span>(random.randint(<span class="number">1</span>,<span class="number">20</span>))<span class="comment">#产生一个[1,20]只内的随机整数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#与序列相关</span></span><br><span class="line">x = [<span class="string">&quot;I&quot;</span>,<span class="number">30</span>,<span class="string">&quot;Chen&quot;</span>,<span class="string">&quot;Zhao&quot;</span>]</span><br><span class="line">y = <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">1</span>,<span class="number">10</span>))</span><br><span class="line"><span class="built_in">print</span>(random.choice(x))<span class="comment">#随机从序列中抽取一个元素打印</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;y打乱前：&quot;</span>,y)</span><br><span class="line">random.shuffle(y)<span class="comment">#shuffle()改变了原有的序列，返回值为空</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;y打乱后：&quot;</span>,y)</span><br><span class="line"><span class="built_in">print</span>(random.samply(x,<span class="number">1</span>))<span class="comment">#从序列中不重复取样，每次取一个，返回值是列表，注意越界</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#与实数值相关</span></span><br><span class="line"><span class="built_in">print</span>(random.random())<span class="comment">#随机产生[0,1)之间的实数随机数，区间是左闭右开</span></span><br><span class="line"><span class="built_in">print</span>(random.uniform(<span class="number">1</span>,<span class="number">3</span>))<span class="comment">#产生[1,3)之间的实数随机数</span></span><br></pre></td></tr></table></figure></li><li><p>re：为高级字符串处理提供了正则表达式工具</p><ul><li><p>常用来检索、替换那些符合某个模式（规则）的文本</p></li><li><p>验证数据的有效性</p></li><li><p>爬虫</p></li><li><p>常用函数：</p><table><thead><tr><th align="center">函数</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">search(pattern,string)</td><td align="center">在字符串中寻找模式</td></tr><tr><td align="center">match(pattern,string)</td><td align="center">在字符串开始处匹配模式</td></tr><tr><td align="center">split(pattern,string)</td><td align="center">根据模式分割字符串</td></tr><tr><td align="center">findall(pattern,string)</td><td align="center">列表形式返回匹配项</td></tr><tr><td align="center">compile(oattern)</td><td align="center">创建模式对象</td></tr></tbody></table></li><li><p>控制模式对象实例：</p><table><thead><tr><th align="center">实例</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">[aeiou]</td><td align="center">匹配括号中的任意一个字母</td></tr><tr><td align="center">[0-9]</td><td align="center">匹配任何数字</td></tr><tr><td align="center">[a-z]</td><td align="center">匹配任何小写字母</td></tr><tr><td align="center">[A-Z]</td><td align="center">匹配任何大写字母</td></tr><tr><td align="center">[A-Za-z0-9]</td><td align="center">匹配任何大小写字母和数字</td></tr><tr><td align="center">[^aeiou]</td><td align="center">匹配除aeiou字母以外的所有字符</td></tr><tr><td align="center">[^0-9]</td><td align="center">匹配除数字外的字符</td></tr><tr><td align="center">[Pp]ython</td><td align="center">匹配Python或者python</td></tr></tbody></table></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">x = <span class="string">&quot;君不见黄河；之水天上来；螺狮粉才是yyds；4399小游戏是我的童年！&quot;</span></span><br><span class="line"><span class="built_in">print</span>(re.search(<span class="string">&quot;！&quot;</span>,x))<span class="comment">#查询&quot;!&quot;</span></span><br><span class="line"><span class="built_in">print</span>(re.match(<span class="string">&quot;君不见黄河&quot;</span>,x))<span class="comment">#开始处匹配&quot;君不见黄河&quot;</span></span><br><span class="line"><span class="built_in">print</span>(re.split(<span class="string">&quot;；&quot;</span>,x)) <span class="comment">#以&quot;；&quot;为标志分割x</span></span><br><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">&quot;是&quot;</span>,x))<span class="comment">#查询全部&quot;是&quot;</span></span><br><span class="line"></span><br><span class="line">r = re.<span class="built_in">compile</span>(<span class="string">&quot;[a-z]&quot;</span>)<span class="comment">#设置模式对象</span></span><br><span class="line"><span class="built_in">print</span>(r.findall(x))<span class="comment">#找查模式对象</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="2、第三方模块"><a href="#2、第三方模块" class="headerlink" title="2、第三方模块"></a>2、第三方模块</h3><p>​        pip指令     pypi官网</p><table><thead><tr><th align="center">指令</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">pip –version</td><td align="center">返回当前版本信息</td></tr><tr><td align="center">pip list</td><td align="center">查看已经安装好的包</td></tr><tr><td align="center">pip install 包名[==版本号]</td><td align="center">安装指定版本的包</td></tr><tr><td align="center">pip install 文件名路径（.whl的文件）</td><td align="center">离线安装包或模块</td></tr><tr><td align="center">pip install –upgrade 包名</td><td align="center">升级包/模块</td></tr><tr><td align="center">pip unstall 包名</td><td align="center">卸载包/模块</td></tr><tr><td align="center">pip help</td><td align="center">查询pip指令的功能</td></tr></tbody></table><h3 id="3、自定义模块"><a href="#3、自定义模块" class="headerlink" title="3、自定义模块"></a>3、自定义模块</h3><h4 id="（1）自定义模块的使用"><a href="#（1）自定义模块的使用" class="headerlink" title="（1）自定义模块的使用"></a>（1）自定义模块的使用</h4><p><img src="C:\Users\czcz5\AppData\Roaming\Typora\typora-user-images\image-20211027175636189.png" alt="image-20211027175636189"></p><h4 id="（2）-name-的使用"><a href="#（2）-name-的使用" class="headerlink" title="（2）_name__的使用"></a>（2）_name__的使用</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">lesson</span>():</span></span><br><span class="line">    <span class="keyword">if</span> _name_==_main_:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;自己调用自己&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;被别人调用&quot;</span>)</span><br><span class="line">lesson()<span class="comment">#结果为：自己调用自己</span></span><br><span class="line"><span class="comment">####此文件名为：li851.py</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> li851</span><br><span class="line">li851.lesson()<span class="comment">#结果为：被别人调用</span></span><br></pre></td></tr></table></figure><h4 id="（3）from-import的使用"><a href="#（3）from-import的使用" class="headerlink" title="（3）from/import的使用"></a>（3）from/import的使用</h4><p>​        import 包名  是全部导入</p><p>​        from  模块名 import 函数名  仅仅导入某个函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">lesson1</span>():</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;lesson1&quot;</span>)</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">lessin2</span>():</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;lesson2&quot;</span>) </span><br><span class="line"><span class="comment">###此文件名为：li851.py</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> li851 <span class="keyword">import</span> lesson1</span><br><span class="line"><span class="keyword">from</span> li851 <span class="keyword">import</span> lesson2</span><br><span class="line">lesson1()</span><br><span class="line">lesson2()</span><br></pre></td></tr></table></figure><h2 id="八、高级语法"><a href="#八、高级语法" class="headerlink" title="八、高级语法"></a>八、高级语法</h2><h3 id="1、切片"><a href="#1、切片" class="headerlink" title="1、切片"></a>1、切片</h3><h4 id="（1）语法"><a href="#（1）语法" class="headerlink" title="（1）语法"></a>（1）语法</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">对象名称[开始索引:结束索引:步长]</span><br></pre></td></tr></table></figure><ul><li>三个参数均可省略</li><li>[开始：结束)，左开右闭区间</li><li>步长省略默认为1；开始省略默认为0；结束省略默认最大值</li></ul><p><img src="C:\Users\czcz5\AppData\Roaming\Typora\typora-user-images\image-20211027224257414.png" alt="image-20211027224257414"></p><h4 id="（2）切片访问"><a href="#（2）切片访问" class="headerlink" title="（2）切片访问"></a>（2）切片访问</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">x = [<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#切取单个元素</span></span><br><span class="line"><span class="built_in">print</span>(x[<span class="number">3</span>])</span><br><span class="line"><span class="comment">#切取整个对象</span></span><br><span class="line"><span class="built_in">print</span>(x[:])</span><br><span class="line"><span class="built_in">print</span>(x[::])</span><br><span class="line"><span class="comment">#逆序排列</span></span><br><span class="line"><span class="built_in">print</span>(x[::-<span class="number">1</span>])</span><br><span class="line"><span class="comment">#多层切片</span></span><br><span class="line"><span class="built_in">print</span>(x[<span class="number">0</span>:<span class="number">6</span>][-<span class="number">5</span>:-<span class="number">3</span>][-<span class="number">1</span>])</span><br><span class="line"><span class="comment">#指定位置</span></span><br><span class="line"><span class="built_in">print</span>(x[::<span class="number">2</span>])</span><br></pre></td></tr></table></figure><h4 id="（3）切片插入"><a href="#（3）切片插入" class="headerlink" title="（3）切片插入"></a>（3）切片插入</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">x = [<span class="number">11</span>,<span class="number">22</span>,<span class="number">33</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#在尾部插入一个或多个元素</span></span><br><span class="line">x[<span class="number">3</span>:] = [<span class="number">44</span>]</span><br><span class="line"><span class="built_in">print</span>(x)</span><br><span class="line">x[<span class="number">4</span>:] = [<span class="number">55</span>,<span class="number">66</span>,<span class="number">77</span>]</span><br><span class="line"><span class="built_in">print</span>(x)</span><br><span class="line"></span><br><span class="line"><span class="comment">#在首部插入一个或多个元素</span></span><br><span class="line">x[:<span class="number">0</span>] = [<span class="number">0</span>]</span><br><span class="line"><span class="built_in">print</span>(x)</span><br><span class="line">x[:<span class="number">0</span>] = [-<span class="number">11</span>,-<span class="number">22</span>]</span><br><span class="line"><span class="built_in">print</span>(x)</span><br><span class="line"></span><br><span class="line"><span class="comment">#在中间插入元素</span></span><br><span class="line">x[<span class="number">1</span>:<span class="number">1</span>] = [<span class="number">999</span>,<span class="number">888</span>]</span><br><span class="line"><span class="built_in">print</span>(x)<span class="comment">#[11, 999, 888, 22, 33]</span></span><br></pre></td></tr></table></figure><h4 id="（4）切片修改"><a href="#（4）切片修改" class="headerlink" title="（4）切片修改"></a>（4）切片修改</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">x = [<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line">x[<span class="number">4</span>:] = [-<span class="number">4</span>,-<span class="number">5</span>]<span class="comment">#替换的与被替换的长度相等</span></span><br><span class="line"><span class="built_in">print</span>(x)</span><br><span class="line">x[<span class="number">5</span>:] = [<span class="number">0</span>,-<span class="number">6</span>,-<span class="number">7</span>]<span class="comment">#替换的长度大于被替换的长度</span></span><br><span class="line"><span class="built_in">print</span>(x)</span><br><span class="line">x[<span class="number">1</span>:<span class="number">4</span>] = [-<span class="number">100</span>,-<span class="number">99</span>]<span class="comment">#替换的长度小于被替换的长度</span></span><br><span class="line"><span class="built_in">print</span>(x)</span><br><span class="line"></span><br><span class="line"><span class="comment">#尤其注意不相邻位置上的替换</span></span><br><span class="line"><span class="comment">#例如将y中偶数位置上的值全替换为0</span></span><br><span class="line">y = [<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line">y[::<span class="number">2</span>] = [<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>]   <span class="comment">#此时会报错,因为替换的长度与被替换的长度不相等</span></span><br><span class="line">y[::<span class="number">2</span>] = [<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>] <span class="comment">#不会报错，且正确修改</span></span><br><span class="line"><span class="built_in">print</span>(y)</span><br></pre></td></tr></table></figure><h4 id="（5）切片删除"><a href="#（5）切片删除" class="headerlink" title="（5）切片删除"></a>（5）切片删除</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">x = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#赋空值的方式实现删除（只能实现删除单个值或连续的值）</span></span><br><span class="line">x[<span class="number">7</span>:]=[]</span><br><span class="line"><span class="built_in">print</span>(x)<span class="comment">#[1, 2, 3, 4, 5, 6, 7]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#使用del的方式删除（可以实现不相邻位置上的删除,和连续的多个值或单个值）</span></span><br><span class="line"><span class="keyword">del</span> x[:<span class="number">2</span>]</span><br><span class="line"><span class="built_in">print</span>(x)<span class="comment">#[3, 4, 5, 6, 7]</span></span><br><span class="line"><span class="keyword">del</span> x[::<span class="number">2</span>]</span><br><span class="line"><span class="built_in">print</span>(x)<span class="comment">#[4, 6]</span></span><br></pre></td></tr></table></figure><h3 id="2、Map-Reduce"><a href="#2、Map-Reduce" class="headerlink" title="2、Map Reduce"></a>2、Map Reduce</h3><p>核心思想：分而治之，由繁化简，由简入繁</p><p><img src="C:\Users\czcz5\AppData\Roaming\Typora\typora-user-images\image-20211028000613764.png" alt="image-20211028000613764"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#map()函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">lifang</span>(<span class="params">x</span>):</span></span><br><span class="line"><span class="keyword">return</span> x**<span class="number">3</span></span><br><span class="line"></span><br><span class="line">a = [<span class="number">9</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>]</span><br><span class="line">y = <span class="built_in">map</span>(lifang,a)<span class="comment">#将a中的每一个元素都经过lifang函数运算</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(y))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#reduce()函数</span></span><br><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> reduce</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun</span>(<span class="params">x,y</span>):</span><span class="comment">#求最大值</span></span><br><span class="line">z = x <span class="keyword">if</span> x&gt;y <span class="keyword">else</span> y</span><br><span class="line">   <span class="keyword">return</span> z</span><br><span class="line"></span><br><span class="line">x = [<span class="number">12</span>,<span class="number">45</span>,<span class="number">57</span>,<span class="number">213</span>,<span class="number">877</span>,<span class="number">23</span>,<span class="number">79</span>]</span><br><span class="line">y = reduce(fun,x)<span class="comment">#将第一次fun的结果与x比较得到第二次结果，第二次结果再与比较......</span></span><br><span class="line"><span class="built_in">print</span>(y)</span><br></pre></td></tr></table></figure><h3 id="3、迭代器、生成器"><a href="#3、迭代器、生成器" class="headerlink" title="3、迭代器、生成器"></a>3、迭代器、生成器</h3><h3 id="4、堆"><a href="#4、堆" class="headerlink" title="4、堆"></a>4、堆</h3><h3 id="5、栈"><a href="#5、栈" class="headerlink" title="5、栈"></a>5、栈</h3><h3 id="6、高级模式（闭包）"><a href="#6、高级模式（闭包）" class="headerlink" title="6、高级模式（闭包）"></a>6、高级模式（闭包）</h3><h3 id="7、高级模式（装饰器）"><a href="#7、高级模式（装饰器）" class="headerlink" title="7、高级模式（装饰器）"></a>7、高级模式（装饰器）</h3><h2 id="九、面向对象"><a href="#九、面向对象" class="headerlink" title="九、面向对象"></a>九、面向对象</h2><h3 id="1、类的定义与使用"><a href="#1、类的定义与使用" class="headerlink" title="1、类的定义与使用"></a>1、类的定义与使用</h3><h3 id="2、继承"><a href="#2、继承" class="headerlink" title="2、继承"></a>2、继承</h3><h3 id="3、封装"><a href="#3、封装" class="headerlink" title="3、封装"></a>3、封装</h3><h3 id="4、多态"><a href="#4、多态" class="headerlink" title="4、多态"></a>4、多态</h3><h3 id="5、访问控制台"><a href="#5、访问控制台" class="headerlink" title="5、访问控制台"></a>5、访问控制台</h3><h2 id="十、文件操作"><a href="#十、文件操作" class="headerlink" title="十、文件操作"></a>十、文件操作</h2><h3 id="1、文件基础"><a href="#1、文件基础" class="headerlink" title="1、文件基础"></a>1、文件基础</h3><h3 id="2、读取文件"><a href="#2、读取文件" class="headerlink" title="2、读取文件"></a>2、读取文件</h3><h3 id="3、储存文件"><a href="#3、储存文件" class="headerlink" title="3、储存文件"></a>3、储存文件</h3><h2 id="十一、数据库基础"><a href="#十一、数据库基础" class="headerlink" title="十一、数据库基础"></a>十一、数据库基础</h2><h3 id="1、数据库基本操作"><a href="#1、数据库基本操作" class="headerlink" title="1、数据库基本操作"></a>1、数据库基本操作</h3><h3 id="2、数据库案例"><a href="#2、数据库案例" class="headerlink" title="2、数据库案例"></a>2、数据库案例</h3><h3 id="3、ORM基本概念"><a href="#3、ORM基本概念" class="headerlink" title="3、ORM基本概念"></a>3、ORM基本概念</h3><h3 id="4、ORM案例"><a href="#4、ORM案例" class="headerlink" title="4、ORM案例"></a>4、ORM案例</h3><h3 id="5、ORM案例实现"><a href="#5、ORM案例实现" class="headerlink" title="5、ORM案例实现"></a>5、ORM案例实现</h3><h2 id="十二、错误调试"><a href="#十二、错误调试" class="headerlink" title="十二、错误调试"></a>十二、错误调试</h2><h3 id="1、调试"><a href="#1、调试" class="headerlink" title="1、调试"></a>1、调试</h3><h3 id="2、异常处理方式"><a href="#2、异常处理方式" class="headerlink" title="2、异常处理方式"></a>2、异常处理方式</h3><h3 id="3、单元测试"><a href="#3、单元测试" class="headerlink" title="3、单元测试"></a>3、单元测试</h3><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href=""></a></li><li><a href=""></a></li></ul></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;陈朝努力学Python-NO-1基础入门&quot;&gt;&lt;a href=&quot;#陈朝努力学Python-NO-1基础入门&quot; class=&quot;headerlink&quot; title=&quot;陈朝努力学Python  NO.1基础入门&quot;&gt;&lt;/a&gt;陈朝努力学Python  NO.1基础入门&lt;/h1</summary>
      
    
    
    
    
  </entry>
  
</feed>
